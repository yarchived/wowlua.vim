AbandonQuest	Confirms abandoning a questconfirmation
AbandonSkill	Unlearns a skill (used only for professions)confirmation
AcceptAreaSpiritHeal	Accepts the next upcoming periodic resurrection from a battleground spirit healer
AcceptArenaTeam	Accepts an invitation to join an arena team
AcceptBattlefieldPort	Accepts the offered teleport to a battleground/arena or leaves the battleground/arena or queuehardware
AcceptDuel	Accepts a proposed duel
AcceptGroup	Accepts an invitation to join a party or raid
AcceptGuild	Accepts an invitation to join a guild
AcceptLevelGrant	Accepts a level offered by the player's Recruit-a-Friend partner
AcceptProposal	Accepts a LFG dungeon invite.
AcceptQuest	Accepts the quest offered by a questgiver
AcceptResurrect	Accepts an offered resurrection spell
AcceptSockets	Accepts changes made in the Item Socketing UIconfirmation
AcceptTrade	Accepts a proposed trade
AcceptXPLoss	Resurrects the player at a spirit healer, accepting possible consequencesconfirmation
ActionHasRange	Returns whether an action has a range restriction
AddAutoQuestPopUp	This function is not yet documented
AddChatWindowChannel	Adds a chat channel to the saved list of those displayed in a chat window
AddChatWindowMessages	Adds a message type to the saved list of those displayed in a chat window
AddFriend	Adds a character to the friends list
AddIgnore	Adds a character to the ignore list
AddMute	Adds a character to the muted list for voice chat
AddOrDelIgnore	Adds the named character to the ignore list, or removes the character if already in the ignore list
AddOrDelMute	Adds or removes a character from the voice mute list
AddOrRemoveFriend	Adds the named character to the friends list, or removes the character if already in the friends list
AddPreviewTalentPoints	Spends (or unspends) talent points in the Talent UI's preview mode
AddQuestWatch	Adds a quest to the objectives tracker
AddTrackedAchievement	Adds an achievement to the objectives tracker UI
AddTradeMoney	Adds the money currently on the cursor to the trade window
AppendToFile	This is a Blizzard internal functioninternal
ApplyBarberShopStyle	Purchases the selected barber shop style changes
ArchaeologyGetIconInfo	This function is not yet documented
ArchaeologyMapUpdateAll	Returns the number of digsites in the current zone
ArcheologyGetVisibleBlobID	This function is not yet documented
ArenaTeamDisband	Disbands an arena team
ArenaTeamInviteByName	Invites a character to one of the player's arena teams
ArenaTeamLeave	Leaves an arena teamconfirmation
ArenaTeamRoster	Requests arena team roster information from the serverserver
ArenaTeamSetLeaderByName	Promotes an arena team member to team captainconfirmation
ArenaTeamUninviteByName	Removes a member from an arena teamconfirmation
ArenaTeam_GetTeamSizeID	Converts an arena team size to the appropriate numeric arena team identifierframexml
AscendStop	Stops movement initiated by [[docs/api/JumpOrAscendStart|`JumpOrAscendStart`]]protected
AssistUnit	Targets the unit targeted by another unitprotected
AttackTarget	Begins auto-attack against the player's current targetprotected
AutoEquipCursorItem	Equips the item on the cursor
AutoLootMailItem	Automatically takes any attached items and money from a mail
AutoStoreGuildBankItem	Withdraws the item(s) from a slot in the guild bank, automatically adding to the player's bags
BNAcceptFriendInvite	This function is not yet documented
BNConnected	Returns whether or not the player is connected to Battle.net
BNCreateConversation	Create a conversation between you and two friends
BNDeclineFriendInvite	This function is not yet documented
BNFeaturesEnabled	Returns whether or not RealID services are disabled
BNFeaturesEnabledAndConnected	This function is not yet documented
BNGetBlockedInfo	This function is not yet documented
BNGetBlockedToonInfo	This function is not yet documented
BNGetConversationInfo	Returns information about an existing battle.net conversationreview
BNGetConversationMemberInfo	Returns information about a member of a battle.net conversationreview
BNGetCustomMessageTable	This function is not yet documented
BNGetFOFInfo	Returns information about the specified friend of a RealID friend
BNGetFriendIndex	This function is not yet documented
BNGetFriendInfo	Returns information about a RealID friend by index
BNGetFriendInfoByID	Returns information about a RealID friend
BNGetFriendInviteInfo	This function is not yet documented
BNGetFriendToonInfo	Returns information about a particular online toon tied to a RealID friend
BNGetInfo	Returns information about the player's RealID settings
BNGetMatureLanguageFilter	Returns boolean for the Mature Language Filter option's state.
BNGetMaxNumConversations	Returns the maximum number of simultanious RealID conversations you can be a part of
BNGetMaxPlayersInConversation	Returns the maximum number of realID friends you can have in one conversation
BNGetNumBlocked	This function is not yet documented
BNGetNumBlockedToons	This function is not yet documented
BNGetNumConversationMembers	Returns the number of members in a battle.net conversation
BNGetNumFOF	This function is not yet documented
BNGetNumFriendInvites	This function is not yet documented
BNGetNumFriendToons	Returns the number of online toons for a friend
BNGetNumFriends	Returns total number of RealID friends and currently online number of RealID friends
BNGetSelectedBlock	This function is not yet documented
BNGetSelectedFriend	Returns the index of the selected user on your friend's list
BNGetSelectedToonBlock	This function is not yet documented
BNGetToonInfo	Returns information about the active toon tied to a RealID friend
BNInviteFriend	This function is not yet documented
BNInviteToConversation	Invite a friend into an existing conversation
BNIsBlocked	This function is not yet documented
BNIsFriend	This function is not yet documented
BNIsSelf	Returns whether or not the presence ID is the one of the player
BNIsToonBlocked	This function is not yet documented
BNLeaveConversation	This function is not yet documented
BNListConversation	This function is not yet documented
BNRemoveFriend	This function is not yet documented
BNReportFriendInvite	This function is not yet documented
BNReportPlayer	This function is not yet documented
BNRequestFOFInfo	This function is not yet documented
BNSendConversationMessage	This function is not yet documented
BNSendFriendInvite	This function is not yet documented
BNSendFriendInviteByID	This function is not yet documented
BNSendWhisper	This function is not yet documented
BNSetAFK	This function is not yet documented
BNSetBlocked	This function is not yet documented
BNSetCustomMessage	Sets the player's current RealID broadcast message.
BNSetDND	This function is not yet documented
BNSetFocus	This function is not yet documented
BNSetFriendNote	Changes the private note for a RealID friend
BNSetMatureLanguageFilter	Sets the Mature Language Filter option
BNSetSelectedBlock	This function is not yet documented
BNSetSelectedFriend	This function is not yet documented
BNSetSelectedToonBlock	This function is not yet documented
BNSetToonBlocked	This function is not yet documented
BNTokenCombineGivenAndSurname	Returns a combined link for the surname and given name for a RealID
BankButtonIDToInvSlotID	Returns the [[docs/api_types#inventoryID|`inventoryID`]] corresponding to a bank item or bag slot
BarberShopReset	Resets barber shop options to the currently worn styles
BattlefieldMgrEntryInviteResponse	This function is not yet documented
BattlefieldMgrExitRequest	This function is not yet documented
BattlefieldMgrQueueInviteResponse	This function is not yet documented
BattlefieldMgrQueueRequest	This function is not yet documented
BeginTrade	This function is deprecated and should no longer be useddeprecated
BindEnchant	Confirms enchanting an item (when the item will become soulbound as a result)confirmation
BuyGuildBankTab	Purchases the next available guild bank tabconfirmation
BuyGuildCharter	Purchases a guild charter
BuyMerchantItem	Purchases an item available from a vendorconfirmation
BuyTrainerService	Purchases an ability or recipe available from a trainer
BuybackItem	Repurchases an item recently sold to a vendor
CalculateAuctionDeposit	Returns the deposit amount for the item currently being set up for auction
CalendarAddEvent	Saves the event recently created (and selected for editing) to the calendar
CalendarCanAddEvent	Returns whether the player can add an event to the calendar
CalendarCanSendInvite	Returns whether the player can invite others to a calendar event
CalendarCloseEvent	Deselects (ends viewing/editing on) an event
CalendarContextDeselectEvent	Clears the event selection used only for `CalendarContext` functions
CalendarContextEventCanComplain	Returns whether the player can report an event invitation as spam
CalendarContextEventCanEdit	Returns whether the player can edit an event
CalendarContextEventCanRemove	This function is not yet documented
CalendarContextEventClipboard	Returns whether the player can paste an event
CalendarContextEventComplain	Reports an event invitation as spam
CalendarContextEventCopy	Copies an event for later pasting
CalendarContextEventGetCalendarType	Returns the type of a calendar event
CalendarContextEventPaste	Pastes a copied event into a given date
CalendarContextEventRemove	Deletes an event from the calendarconfirmation
CalendarContextEventSignUp	Signs the player up for a guild event
CalendarContextGetEventIndex	Returns the month, day, and index of the event selection used only for `CalendarContext` functions
CalendarContextInviteAvailable	Accepts an event invitation
CalendarContextInviteDecline	Declines an event invitation
CalendarContextInviteIsPending	Returns whether the player has been invited to an event and not yet responded
CalendarContextInviteModeratorStatus	Returns the player's moderator status for an event
CalendarContextInviteRemove	Removes an invitation from the player's calendar or removes the player from a guild event's signup list
CalendarContextInviteStatus	Returns the player's invite status for an event
CalendarContextInviteTentative	This function is not yet documented
CalendarContextInviteType	Returns the invite type for an event
CalendarContextSelectEvent	Selects an event for use only with other `CalendarContext` functions
CalendarDefaultGuildFilter	Returns default options for the guild member Mass Invite filter
CalendarEventAvailable	Accepts invitation to the selected calendar event
CalendarEventCanEdit	Returns whether the player can edit the selected calendar event
CalendarEventCanModerate	Returns whether an event invitee can be granted moderator authority
CalendarEventClearAutoApprove	Disables the auto-approve feature (currently unused) for the selected calendar event
CalendarEventClearLocked	Unlocks the selected calendar event
CalendarEventClearModerator	Removes moderator status from a character on the selected event's invite/signup list
CalendarEventDecline	Declines invitation to the selected calendar event
CalendarEventGetCalendarType	Returns the type of the selected calendar event
CalendarEventGetInvite	Returns information about an entry in the selected event's invite/signup list
CalendarEventGetInviteResponseTime	Returns the time at which a character on the selected event's invite/signup list responded
CalendarEventGetInviteSortCriterion	Returns the current sort mode for the event invite/signup list
CalendarEventGetNumInvites	Returns the number of characters on the selected calendar event's invite/signup list
CalendarEventGetRepeatOptions	Returns a list of localized event repetition option labels (currently unused)
CalendarEventGetSelectedInvite	Returns the index of the selected entry on the selected event's invite/signup list
CalendarEventGetStatusOptions	Returns a list of localized invite status labels
CalendarEventGetTextures	Returns a list of instance names and icons for dungeon or raid events
CalendarEventGetTypes	Returns a list of event display style labels
CalendarEventGetTypesDisplayOrdered	This function is not yet documented
CalendarEventHasPendingInvite	Returns whether the player has been invited to the selected event and not yet responded
CalendarEventHaveSettingsChanged	Returns whether the selected event has unsaved changes
CalendarEventInvite	Attempts to invite a character to the selected event
CalendarEventIsModerator	Returns whether the player has moderator status for the selected calendar event
CalendarEventRemoveInvite	Removes a character from the selected event's invite/signup list
CalendarEventSelectInvite	Selects an entry in the selected event's invite/signup list
CalendarEventSetAutoApprove	Enables the auto-approve feature (currently unused) for the selected calendar event
CalendarEventSetDate	Changes the scheduled date of the selected calendar event
CalendarEventSetDescription	Changes the descriptive text for the selected event
CalendarEventSetLocked	Locks the selected calendar event
CalendarEventSetLockoutDate	Changes the lockout date associated with the selected event (currently unused)
CalendarEventSetLockoutTime	Changes the lockout time associated with the selected event (currently unused)
CalendarEventSetModerator	Grants moderator status to a character on the selected event's invite/signup list
CalendarEventSetRepeatOption	Changes the repetition option for the selected event (currently unused)
CalendarEventSetSize	Changes the maximum number of invites/signups for the selected event (currently unused)
CalendarEventSetStatus	Sets the status of a character on the selected event's invite/signup list
CalendarEventSetTextureID	Changes the raid or dungeon instance for the selected event
CalendarEventSetTime	Changes the scheduled time of the selected event
CalendarEventSetTitle	Changes the title for the selected event
CalendarEventSetType	Changes the display type of the selected event
CalendarEventSignUp	Signs the player up for the selected calendar event
CalendarEventSortInvites	Sorts the event invite/signup list
CalendarEventTentative	This function is not yet documented
CalendarGetAbsMonth	Returns date information for a given month and year
CalendarGetDate	Returns the current date (in the server's time zone)
CalendarGetDayEvent	Returns information about a calendar event on a given day
CalendarGetDayEventSequenceInfo	This function is not yet documented
CalendarGetEventIndex	Returns the month, day, and index of the selected calendar event
CalendarGetEventInfo	Returns information about the selected calendar event (for player/guild events)
CalendarGetFirstPendingInvite	Returns the index of the first invitation on a given day to which the player has not responded
CalendarGetGuildEventInfo	This function is not yet documented
CalendarGetGuildEventSelectionInfo	This function is not yet documented
CalendarGetHolidayInfo	Returns additional information about a holiday event
CalendarGetMaxCreateDate	Returns the latest date for which events may be scheduled
CalendarGetMaxDate	Returns the latest date usable in the calendar system
CalendarGetMinDate	Returns the earliest date usable in the calendar system
CalendarGetMinHistoryDate	Returns the earliest date for which information about past player events is available
CalendarGetMonth	Returns information about a calendar month
CalendarGetMonthNames	Returns a list of localized month names
CalendarGetNumDayEvents	Returns the number of calendar events on a given day
CalendarGetNumGuildEvents	Returns the number of guild events in your calendar
CalendarGetNumPendingInvites	Returns the number of calendar invitations to which the player has yet to respond
CalendarGetRaidInfo	Returns information about a raid lockout or scheduled raid reset event
CalendarGetWeekdayNames	Returns a list of localized weekday names
CalendarIsActionPending	Returns whether an update to calendar information is in progress
CalendarMassInviteArenaTeam	Repopulates the current event's invite list with members of one of the player's arena teams
CalendarMassInviteGuild	Repopulates the selected event's invite list with members of the player's guild
CalendarNewEvent	Creates a new event and selects it for viewing/editing
CalendarNewGuildAnnouncement	Creates a new guild announcement and selects it for viewing/editing
CalendarNewGuildEvent	Creates a new guild event and selects it for viewing/editing
CalendarOpenEvent	Selects a calendar event for viewing/editing
CalendarRemoveEvent	Removes the selected event invitation from the player's calendar or removes the player from the selected guild event's signup list
CalendarSetAbsMonth	Set's the calendar's month to an absolute date
CalendarSetMonth	Sets the calendar's month relative to its current month
CalendarUpdateEvent	Saves changes made to the selected event
CallCompanion	Summons a non-combat pet or mount
CameraOrSelectOrMoveStart	Begins camera movement or selection (equivalent to left-clicking in the 3-D world)protected
CameraOrSelectOrMoveStop	Ends action initiated by [[docs/api/CameraOrSelectOrMoveStart|`CameraOrSelectOrMoveStart`]]protected
CameraZoomIn	Zooms the camera in by a specified distance
CameraZoomOut	Zooms the camera out by a specified distance
CanAlterSkin	Lets you check if the player can change their skin color
CanBeRaidTarget	Returns whether a unit can be marked with a raid symbol or not
CanCancelAuction	Returns whether one of the player's auctions can be canceled
CanChangePlayerDifficulty	This function is not yet documented
CanComplainChat	Returns whether a chat message can be reported as spam
CanComplainInboxItem	Returns whether a mail can be reported as spam
CanEditGuildBankTabInfo	This function is not yet documented
CanEditGuildEvent	Returns whether the player is allowed to edit guild-wide calendar events
CanEditGuildInfo	Returns whether the player is allowed to edit the guild information text
CanEditGuildTabInfo	Returns whether the player is allowed to edit a guild bank tab's information
CanEditMOTD	Returns whether the player is allowed to edit the guild Message of the Day
CanEditOfficerNote	Returns whether the player is allowed to edit guild officer notes
CanEditPublicNote	Returns whether the player is allowed to edit guild public notes
CanEjectPassengerFromSeat	Returns whether the player can eject the occupant of a seat in the player's vehicle
CanExitVehicle	Returns whether the player is in a vehicle
CanGrantLevel	Returns whether the player can give levels to a Recruit-a-Friend partner
CanGuildBankRepair	Returns whether the player is allowed to pay for repairs using guild bank funds
CanGuildDemote	Returns whether the player is allowed to demote lower ranked guild members
CanGuildInvite	Returns whether the player is allowed to invite new members to his or her guild
CanGuildPromote	Returns whether the player is allowed to promote other guild members
CanGuildRemove	Returns whether the player is allowed to remove members from his or her guild
CanHearthAndResurrectFromArea	Returns whether the player is in a world PvP zone offering an exit option
CanInitiateWarGame	This is a Blizzard internal functioninternal
CanInspect	Returns whether a unit can be inspected
CanItemBeSocketedToArtifact	This function is not yet documented
CanJoinBattlefieldAsGroup	Returns whether the battleground for which the player is queueing supports joining as a group
CanMapChangeDifficulty	This function is not yet documented
CanMerchantRepair	Returns whether the vendor with whom the player is currently interacting can repair equipment
CanPartyLFGBackfill	This function is not yet documented
CanQueueForWintergrasp	Returns whether the player can queue for Wintergrasp
CanResetTutorials	This function is not yet documented
CanSendAuctionQuery	Returns whether the player can perform an auction house query
CanShowAchievementUI	Returns whether the Achievements UI should be enabled
CanShowResetInstances	Returns whether the player can reset instances
CanSignPetition	Returns whether the player can sign the currently offered petition
CanSolveArtifact	This function is not yet documented
CanSummonFriend	Returns whether a unit can be summoned via Recruit-a-Friend
CanSwitchVehicleSeat	Returns whether the player can change vehicle seats
CanSwitchVehicleSeats	Returns whether the player is in a vehicle with multiple seats
CanUseEquipmentSets	Returns whether the player has enabled the equipment manager
CanViewGuildRecipes	This function is not yet documented
CanViewOfficerNote	Returns whether the player is allowed to view guild officer notes
CanWithdrawGuildBankMoney	Returns whether the player is allowed to withdraw money from the guild bank
CancelAreaSpiritHeal	Declines the next upcoming periodic resurrection from a battleground spirit healer
CancelAuction	Cancels an auction created by the playerconfirmationhardware
CancelBarberShop	Exits a barber shop session
CancelDuel	Cancels an ongoing duel, or declines an offered duel
CancelEmote	This function is not yet documented
CancelGuildMembershipRequest	This function is not yet documented
CancelItemTempEnchantment	Cancels a temporary weapon enchantprotected
CancelLogout	Cancels a pending logout or quitprotected
CancelPendingEquip	Cancels equipping a bind-on-equip item
CancelPreloadingMovie	This function is not yet documented
CancelSell	This function is not yet documented
CancelShapeshiftForm	Cancels the current shapeshift formprotected
CancelSummon	Declines an offered summons
CancelTrade	Cancels a trade in progress
CancelTradeAccept	Cancels the player's acceptance of a trade
CancelUnitBuff	Cancels a buff on the playerprotected
CannotBeResurrected	This function is not yet documented
CastGlyph	This function is not yet documented
CastGlyphByID	This function is not yet documented
CastGlyphByName	This function is not yet documented
CastPetAction	Casts a pet action on a specific targetprotected
CastShapeshiftForm	Casts an ability on the stance/shapeshift barprotected
CastSpell	Casts a from the spellbookprotected
CastSpellByID	Casts a spell specified by id (optionally on a specified unit)protected
CastSpellByName	Casts a spell specified by name (optionally on a specified unit)protected
ChangeActionBarPage	Changes the current action bar pagenocombat
ChangeChatColor	Changes the color associated with a chat message type
ChannelBan	Bans a character from a chat channel
ChannelInvite	Invites a character to join a chat channel
ChannelKick	Removes a player from the channel
ChannelModerator	Grants a character moderator status in a chat channel
ChannelMute	Grants a character ability to speak in a moderated chat channel
ChannelSilenceAll	Silences a character for chat and voice on a channel
ChannelSilenceVoice	Silences the given character for voice chat on the channel
ChannelToggleAnnouncements	Enables or disables printing of join/leave announcements for a channel
ChannelUnSilenceAll	Unsilences a character for chat and voice on a channel
ChannelUnSilenceVoice	Unsilences a character on a chat channel
ChannelUnban	Lifts the ban preventing a character from joining a chat channel
ChannelUnmoderator	Revokes moderator status from a character on a chat channel
ChannelUnmute	Removes a character's ability to speak in a moderated chat channel
ChannelVoiceOff	Disables voice chat in a channel
ChannelVoiceOn	Enables voice chat in a channel
ChatFrame_AddMessageEventFilter	Adds a function to filter or alter messages to the chat display systemblizzarduiframexml
ChatFrame_GetMessageEventFilters	Returns the list of filters registered for a chat eventblizzarduiframexml
ChatFrame_RemoveMessageEventFilter	Removes a previously set chat message filterblizzarduiframexml
CheckBinderDist	Returns whether the player is in range of an NPC that can set the Hearthstone location
CheckInbox	Requests information on the player's mailbox contents from the serverserver
CheckInteractDistance	Returns whether the player is close enough to a unit for certain types of interaction
CheckSpiritHealerDist	Returns whether the player is in range of a spirit healer
CheckTalentMasterDist	Returns whether the player is in range of an NPC that can reset talents
ClearAchievementComparisonUnit	Disables comparing achievements/statistics with another player
ClearAllLFGDungeons	Removes the player from all LFD queues.
ClearAllTracking	This function is not yet documented
ClearAutoAcceptQuestSound	This function is not yet documented
ClearChannelWatch	This function is deprecated and should no longer be useddeprecated
ClearCursor	Clears any contents attached to the cursor
ClearFocus	Clears the player's focus unitprotected
ClearInspectPlayer	Ends inspection of another character
ClearLFGDungeon	This function is not yet documented
ClearOverrideBindings	Clears any registered override bindings for a given owner
ClearPartyAssignment	Removes a group role assignment from a member of the player's party or raidprotected
ClearRaidMarker	This function is not yet documented
ClearSendMail	Clears any text, items, or money from the mail to be sent
ClearTarget	Clears the player's current targetprotected
ClearTutorials	Disables contextual tutorial display
ClickAuctionSellItemButton	Picks up an item from or puts an item into the "Create Auction" slot
ClickLandmark	Processes a hyperlink associated with a map landmark
ClickSendMailItemButton	Picks up an item from or puts an item into an attachment slot for sending mail
ClickSocketButton	Picks up or places a gem in the Item Socketing UI
ClickTargetTradeButton	Interacts with an item in a slot offered for trade by the target
ClickTradeButton	Picks up an item from or puts an item in a slot offered for trade by the player
CloseArenaTeamRoster	Ends interaction with the Arena Team Roster
CloseAuctionHouse	Ends interaction with the Auction House UI
CloseBankFrame	Ends interaction with the bank
CloseGossip	Ends an NPC "gossip" interaction
CloseGuildBankFrame	Ends interaction with the guild bank vault
CloseGuildRegistrar	Ends interaction with a guild registrar
CloseGuildRoster	This function is deprecated and should no longer be useddeprecated
CloseItemText	Ends interaction with a text object or item
CloseLoot	Ends interaction with a lootable corpse or object
CloseMail	Ends interaction with a mailbox
CloseMerchant	Ends interaction with a vendor
ClosePetStables	Ends use of the Pet Stables UI/API
ClosePetition	Ends interaction with a petition
CloseQuest	Ends interaction with a questgiver
CloseReforge	This function is not yet documented
CloseResearch	This function is not yet documented
CloseSocketInfo	Ends interaction with the Item Socketing UI, discarding any changes made
CloseTabardCreation	Ends interaction with the guild tabard creator
CloseTaxiMap	Ends interaction with the Taxi (flight master) UI
CloseTrade	Ends interaction with the Trade UI, canceling any trade in progress
CloseTradeSkill	Ends interaction with the Trade Skill UI
CloseTrainer	Ends interaction with a trainer
CollapseAllFactionHeaders	Collapses all headers and sub-headers in the Reputation UI
CollapseChannelHeader	Collapses a group header in the chat channel listing
CollapseFactionHeader	Collapses a given faction header or sub-header in the Reputation UI
CollapseGuildTradeSkillHeader	Collapses the corresponding profession in the guild window
CollapseQuestHeader	Collapses a header in the quest log
CollapseTradeSkillSubClass	Collapses a group header in the trade skill listing
CollapseWarGameHeader	This function is not yet documented
CombatLogAddFilter	Adds a filter to the combat log system
CombatLogAdvanceEntry	Advances the "cursor" position used by other CombatLog functions
CombatLogClearEntries	Removes all entries from the combat log
CombatLogGetCurrentEntry	Returns the combat log event information for the current entry and advances to the next entry
CombatLogGetNumEntries	Returns the number of available combat log events
CombatLogGetRetentionTime	Returns the amount of time combat log entries are stored
CombatLogResetFilter	Removes any filters applied to the combat log
CombatLogSetCurrentEntry	Sets the "cursor" position used by other CombatLog functions
CombatLogSetRetentionTime	Sets the amount of time combat log entries will be stored
CombatLog_Object_IsA	Returns whether an entity from the combat log matches a given filter
CombatTextSetActiveUnit	Sets the main unit for display of floating combat text
CommentatorAddPlayer	This is a Blizzard internal functioninternal
CommentatorEnterInstance	This is a Blizzard internal functioninternal
CommentatorExitInstance	This is a Blizzard internal functioninternal
CommentatorFollowPlayer	This is a Blizzard internal functioninternal
CommentatorGetCamera	This is a Blizzard internal functioninternal
CommentatorGetCurrentMapID	This is a Blizzard internal functioninternal
CommentatorGetInstanceInfo	This is a Blizzard internal functioninternal
CommentatorGetMapInfo	This is a Blizzard internal functioninternal
CommentatorGetMode	This is a Blizzard internal functioninternal
CommentatorGetNumMaps	This is a Blizzard internal functioninternal
CommentatorGetNumPlayers	This is a Blizzard internal functioninternal
CommentatorGetPartyInfo	This function is not yet documented
CommentatorGetPlayerInfo	This is a Blizzard internal functioninternal
CommentatorGetSkirmishMode	This is a Blizzard internal functioninternal
CommentatorGetSkirmishQueueCount	This is a Blizzard internal functioninternal
CommentatorGetSkirmishQueuePlayerInfo	This is a Blizzard internal functioninternal
CommentatorLookatPlayer	This is a Blizzard internal functioninternal
CommentatorRemovePlayer	This is a Blizzard internal functioninternal
CommentatorRequestSkirmishMode	This is a Blizzard internal functioninternal
CommentatorRequestSkirmishQueueData	This is a Blizzard internal functioninternal
CommentatorSetBattlemaster	This is a Blizzard internal functioninternal
CommentatorSetCamera	This is a Blizzard internal functioninternal
CommentatorSetCameraCollision	This is a Blizzard internal functioninternal
CommentatorSetMapAndInstanceIndex	This is a Blizzard internal functioninternal
CommentatorSetMode	This is a Blizzard internal functioninternal
CommentatorSetMoveSpeed	This is a Blizzard internal functioninternal
CommentatorSetPlayerIndex	This is a Blizzard internal functioninternal
CommentatorSetSkirmishMatchmakingMode	This is a Blizzard internal functioninternal
CommentatorSetTargetHeightOffset	This is a Blizzard internal functioninternal
CommentatorStartInstance	This is a Blizzard internal functioninternal
CommentatorStartSkirmishMatch	This is a Blizzard internal functioninternal
CommentatorStartWargame	This is a Blizzard internal functioninternal
CommentatorToggleMode	This is a Blizzard internal functioninternal
CommentatorUpdateMapInfo	This is a Blizzard internal functioninternal
CommentatorUpdatePlayerInfo	This is a Blizzard internal functioninternal
CommentatorZoomIn	This is a Blizzard internal functioninternal
CommentatorZoomOut	This is a Blizzard internal functioninternal
ComplainChat	Reports a chat message as spam
ComplainInboxItem	Reports a mail as spam
CompleteLFGRoleCheck	This function is not yet documented
CompleteQuest	Begins turning in a quest to a questgiver
ConfirmAcceptQuest	Accepts a quest started by another group member
ConfirmBindOnUse	Confirms using an item, if using the item causes it to become soulboundconfirmation
ConfirmBinder	Sets the player's Hearthstone to the current location
ConfirmLootRoll	Confirms the player's intent regarding an item up for loot rollingconfirmation
ConfirmLootSlot	Confirms picking up an item available as lootconfirmation
ConfirmOnUse	This function is not yet documented
ConfirmReadyCheck	Responds to a ready check
ConfirmSummon	Accepts an offered summons, teleporting the player to the summoner's location
ConfirmTalentWipe	Resets the player's talentsconfirmation
ConsoleAddMessage	Prints text to the debug console
ConsoleExec	Runs a console command
ContainerIDToInventoryID	Returns the [[docs/api_types#inventoryID|`inventoryID`]] corresponding to a given [[docs/api_types#containerID|`containerID`]]
ContainerRefundItemPurchase	Sells an item purchased with alternate currency back to a vendor
ConvertToParty	Converts a raid to a party
ConvertToRaid	Converts a party to a raid
CreateArenaTeam	This function is not yet documented
CreateFont	Creates a new Font object
CreateFrame	Creates a new Frame object
CreateMacro	Creates a new macro
CreateMiniWorldMapArrowFrame	This is a Blizzard internal functioninternal
CreateNewRaidProfile	This function is not yet documented
CreateWorldMapArrowFrame	This is a Blizzard internal functioninternal
CursorCanGoInSlot	Returns whether the item on the cursor can be equipped in an inventory slot
CursorHasItem	Returns whether an item belonging to the player is on the cursor
CursorHasMacro	Returns whether a macro is on the cursor
CursorHasMoney	Returns whether an amount of the player's money is on the cursor
CursorHasSpell	Returns whether a spell is on the cursor
DeclineArenaTeam	Declines an arena team invitation
DeclineGroup	Declines an invitation to join a party or raid
DeclineGuild	Declines an offered guild invitation
DeclineGuildApplicant	This function is not yet documented
DeclineInvite	Declines an invitation to a chat channel
DeclineLevelGrant	Refuses a level offered by the player's Recruit-a-Friend partner
DeclineName	Returns suggested declensions for a name
DeclineQuest	Declines a quest.
DeclineResurrect	Declines an offered resurrection spell
DelIgnore	Removes a player from the ignore list
DelMute	Removes a character from the muted list for voice chat
DeleteCursorItem	Destroys the item on the cursorconfirmation
DeleteEquipmentSet	Deletes an equipment setconfirmation
DeleteFile	This is a Blizzard internal functioninternal
DeleteGMTicket	Abandons the currently pending GM ticketconfirmation
DeleteInboxItem	Deletes a mail from the player's inboxconfirmation
DeleteMacro	Deletes a macro
DeleteRaidProfile	This function is not yet documented
DemoteAssistant	Demotes the given player from raid assistant status
DepositGuildBankMoney	Deposits money into the guild bankconfirmation
DescendStop	Stops movement initiated by [[docs/api/SitStandOrDescendStart|`SitStandOrDescendStart`]]protected
DestroyTotem	Destroys a specific totem (or ghoul)
DetectWowMouse	Detects the presence of a "WoW" compatible multi-button mouse
DisableAddOn	Marks an addon as disabled
DisableAllAddOns	Marks all addons as disabled
DisableSpellAutocast	Disables automatic casting of a pet spellprotected
DismissCompanion	Unsummons the current non-combat pet or mount
Dismount	Dismounts from the player's summoned mount
DisplayChannelOwner	Requests information from the server about a channel's ownerserver
DisplayChannelVoiceOff	Disables voice in a channel specified by its position in the channel list display
DisplayChannelVoiceOn	Enables voice in a channel specified by its position in the channel list display
DoEmote	Performs a preset emote (with optional target)
DoReadyCheck	Initiates a ready check
DoTradeSkill	Performs a trade skill recipe
DownloadSettings	Restores game settings from a backup stored on the server
DropCursorMoney	Drops any money currently on the cursor, returning it to where it was taken from
DropItemOnUnit	"Gives" the item on the cursor to another unit; results vary by context
DungeonUsesTerrainMap	This function is not yet documented
EJ_ClearSearch	This function is not yet documented
EJ_GetAvailableClasses	This function is not yet documented
EJ_GetCreatureInfo	This function is not yet documented
EJ_GetCurrentInstance	This function is not yet documented
EJ_GetEncounterInfo	This function is not yet documented
EJ_GetEncounterInfoByIndex	This function is not yet documented
EJ_GetInstanceByIndex	This function is not yet documented
EJ_GetInstanceInfo	This function is not yet documented
EJ_GetLootInfo	This function is not yet documented
EJ_GetLootInfoByIndex	This function is not yet documented
EJ_GetMapEncounter	This function is not yet documented
EJ_GetNumLoot	This function is not yet documented
EJ_GetNumSearchResults	This function is not yet documented
EJ_GetSearchResult	This function is not yet documented
EJ_GetSectionInfo	This function is not yet documented
EJ_GetSectionPath	This function is not yet documented
EJ_GetTierInfo	This function is not yet documented
EJ_HandleLinkPath	This function is not yet documented
EJ_InstanceIsRaid	This function is not yet documented
EJ_SelectEncounter	This function is not yet documented
EJ_SelectInstance	This function is not yet documented
EJ_SelectTier	This function is not yet documented
EJ_SetClassLootFilter	This function is not yet documented
EJ_SetDifficulty	This function is not yet documented
EJ_SetDifficultyByMask	This function is not yet documented
EJ_SetSearch	This function is not yet documented
EditMacro	Changes the name, icon, and/or body of a macronocombat
EjectPassengerFromSeat	Ejects the occupant of a seat in the player's vehicle
EnableAddOn	Marks an addon as enabled
EnableAllAddOns	Marks all addons as enabled
EnableSpellAutocast	Enables automatic casting of a pet spellprotected
EndBoundTradeable	Confirms taking an action which renders a looted Bind on Pickup item non-tradeableconfirmation
EndRefund	Confirms taking an action which renders a purchased item non-refundableconfirmation
EnumerateFrames	Returns the next frame following the frame passed, or nil if no more frames exist
EnumerateServerChannels	Returns the available server channel names
EquipCursorItem	Puts the item on the cursor into a specific equipment slot
EquipItemByName	Attempts to equip an arbitrary item
EquipPendingItem	Confirms equipping a bind-on-equip itemconfirmation
EquipmentManagerClearIgnoredSlotsForSave	Clears the list of equipment slots to be ignored when saving sets
EquipmentManagerIgnoreSlotForSave	Adds an equipment slot to the list of those ignored when saving sets
EquipmentManagerIsSlotIgnoredForSave	Returns whether the contents of an equipment slot will be included when saving sets
EquipmentManagerUnignoreSlotForSave	Removes an equipment slot from the list of those ignored when saving sets
EquipmentManager_UnpackLocation	Unpacks an inventory location bitfield into usable componentsframexml
EquipmentSetContainsLockedItems	Returns whether an equipment set contains locked items
ExpandAllFactionHeaders	Expands all headers and sub-headers in the Reputation UI
ExpandChannelHeader	Expands a group header in the chat channel listing
ExpandCurrencyList	Expands or collapses a list header in the Currency UI
ExpandFactionHeader	Expands a given faction header or sub-header in the Reputation UI
ExpandGuildTradeSkillHeader	Expands the corresponding profession in the guild window
ExpandQuestHeader	Expands a quest header in the quest log
ExpandTradeSkillSubClass	Expands a group header in the trade skill listing
ExpandWarGameHeader	This function is not yet documented
FactionToggleAtWar	Toggles "at war" status for a faction
FillLocalizedClassList	Fills a table with localized class names keyed by non-localized class tokens
FindSpellBookSlotBySpellID	This function is not yet documented
FlagTutorial	Marks a contextual tutorial as displayed so it doesn't appear again
FlipCameraYaw	Rotates the camera around the player
FocusUnit	Changes the `focus` unitID to refer to a new unitprotected
FollowUnit	Causes the player character to automatically follow another unit
ForceGossip	This function is not yet documented
ForceLogout	Forces the client to logoutinternal
ForceQuit	Immediately exits World of Warcraft
FrameXML_Debug	Enables or disables logging of XML loading
GMReportLag	This function is not yet documented
GMRequestPlayerInfo	This is a Blizzard internal functioninternal
GMResponseNeedMoreHelp	Requests further GM interaction on a ticket to which a GM has already responded
GMResponseResolve	Notifies the server that the player's GM ticket issue has been resolvedserver
GMSurveyAnswer	Returns text of multiple-choice question answers in a GM survey
GMSurveyAnswerSubmit	Submits an answer to a GM survey question
GMSurveyCommentSubmit	Submits a comment to the current GM survey
GMSurveyNumAnswers	Returns the number of possible answers for a GM Survey questiondeprecated
GMSurveyQuestion	Returns the text of a specific question from a GM survey
GMSurveySubmit	Submits the current GM survey
GameMovieFinished	Ends in-game movie playback
GetAbandonQuestItems	Returns information about items that would be destroyed by abandoning a quest
GetAbandonQuestName	Returns the name of the quest being abandoned
GetAccountExpansionLevel	Returns the most recent of WoW's retail expansion packs for which the player's account is authorized
GetAchievementCategory	Returns the numeric ID of the category to which an achievement belongs
GetAchievementComparisonInfo	Returns information about the comparison unit's achievements
GetAchievementCriteriaInfo	Gets information about criteria for an achievement or data for a statistic
GetAchievementGuildRep	This function is not yet documented
GetAchievementInfo	Gets information about an achievement or statistic
GetAchievementInfoFromCriteria	Gets information about an achievement or statistic given a criterion ID
GetAchievementLink	Returns a hyperlink representing the player's progress on an achievement
GetAchievementNumCriteria	Returns the number of measured criteria for an achievement
GetAchievementNumRewards	Returns the number of point rewards for an achievement (currently always 1)
GetAchievementReward	Returns the number of achievement points awarded for earning an achievement
GetActionAutocast	Returns information about autocast actionsdeprecated
GetActionBarPage	Returns the current action bar page
GetActionBarToggles	Returns the current visibility settings for the four secondary action bars
GetActionCooldown	Returns cooldown information about an action
GetActionCount	Returns the number of uses remaining for the given action slot
GetActionInfo	Returns information about an action slot
GetActionText	Returns the text label associated with an action
GetActionTexture	Returns the icon texture for an action
GetActiveArtifactByRace	This function is not yet documented
GetActiveLevel	Returns the level of a quest which can be turned in to the current Quest NPC
GetActiveTalentGroup	Returns the index of the active talent specialization
GetActiveTitle	Returns the name of a quest which can be turned in to the current Quest NPC
GetActiveVoiceChannel	Returns the currently active voice channel
GetAddOnCPUUsage	Returns the amount of CPU time used by an addon
GetAddOnDependencies	Returns a list of addons a given addon is dependent upon
GetAddOnInfo	Returns information about an addon
GetAddOnMemoryUsage	Returns the amount of memory used by an addon
GetAddOnMetadata	Returns the value of certain fields in an addon's TOC file
GetAddOnOptionalDependencies	This function is not yet documented
GetAllowLowLevelRaid	This function is not yet documented
GetArchaeologyInfo	Returns information about Archeology
GetArchaeologyRaceInfo	Get name, icon, index, and fragment for a race
GetAreaSpiritHealerTime	Returns the time remaining until a nearby battleground spirit healer resurrects all players in its area
GetArenaTeam	Returns information about one of the player's arena teams
GetArenaTeamGdfInfo	This is a Blizzard internal functioninternal
GetArenaTeamRosterInfo	Returns information about an arena team member
GetArenaTeamRosterSelection	Returns the currently selected member in an arena team roster
GetArenaTeamRosterShowOffline	Returns whether arena team roster listings should include offline membersdeprecated
GetArmorPenetration	Returns the percentage of enemy armor ignored due to the player's Armor Penetration Rating
GetArtifactInfoByRace	This function is not yet documented
GetArtifactProgress	This function is not yet documented
GetAttackPowerForStat	Returns the attack power bonus provided by one of the player's basic statistics
GetAuctionHouseDepositRate	Returns the deposit rate for the current auction housedeprecated
GetAuctionInvTypes	Returns a list of the inventory subtypes for a given auction house item subclass
GetAuctionItemClasses	Returns a list of localized item class (category) names
GetAuctionItemInfo	Returns information about an auction listing
GetAuctionItemLink	Returns a hyperlink for an item in an auction listing
GetAuctionItemSubClasses	Returns a list of localized subclass names for a given item class
GetAuctionItemTimeLeft	Returns the time remaining before an auction listing expires
GetAuctionSellItemInfo	Returns information about the item currently being set up for auction
GetAuctionSort	Returns the current sort settings for auction data
GetAutoCompletePresenceID	This function is not yet documented
GetAutoCompleteResults	Returns a list of character names which complete a given partial name prefix
GetAutoDeclineGuildInvites	This function is not yet documented
GetAutoQuestPopUp	This function is not yet documented
GetAvailableBandwidth	This function is not yet documented
GetAvailableLevel	Returns the level of a quest available from the current Quest NPC
GetAvailableLocales	This function is not yet documented
GetAvailableQuestInfo	Returns the flags of an available quest during an NPC dialog
GetAvailableTitle	Returns the name of a quest available from the current Quest NPC
GetAverageItemLevel	Returns the players average item level as displayed in the character pane.
GetBackgroundLoadingStatus	This function is not yet documented
GetBackpackCurrencyInfo	Returns information about a currency marked for watching on the Backpack UI
GetBagName	Returns the name of one of the player's bags
GetBankSlotCost	Returns the cost of the next purchasable bank bag slot
GetBarberShopStyleInfo	Returns information about the selected barber shop style option
GetBarberShopTotalCost	Returns the total price of selected barber shop style changes
GetBattlefieldArenaFaction	This function is not yet documentedreview
GetBattlefieldEstimatedWaitTime	Returns the estimated wait time on a battleground or arena queue
GetBattlefieldFlagPosition	Returns the position of a flag in a battleground
GetBattlefieldInstanceExpiration	Returns the amount of time remaining before all players are removed from the instance, if in a battleground instance where the match has completed
GetBattlefieldInstanceRunTime	Returns the amount of time since the current battleground instance opened
GetBattlefieldMapIconScale	Returns the scale to be used for displaying battleground map icons
GetBattlefieldPortExpiration	Returns the time left on a battleground or arena invitation
GetBattlefieldPosition	Returns the position of a battleground team member not in the player's group
GetBattlefieldScore	Returns basic scoreboard information for a battleground/arena participant
GetBattlefieldStatData	Returns battleground-specific scoreboard information for a battleground participant
GetBattlefieldStatInfo	Returns information about a battleground-specific scoreboard column
GetBattlefieldStatus	Returns information about an active or queued battleground/arena instance
GetBattlefieldTeamInfo	Returns info about teams and their ratings in a rated arena match.
GetBattlefieldTimeWaited	Returns the amount of time elapsed since the player joined the queue for a battleground/arena
GetBattlefieldVehicleInfo	Returns information about special vehicles in the current zone
GetBattlefieldWinner	Returns the winner of the current battleground or arena match
GetBattlegroundInfo	Returns information about available battlegrounds
GetBidderAuctionItems	Requests data from the server for the list of auctions bid on by the playerserver
GetBillingTimeRested	Returns the amount of time for which the player must be offline in order to lift play time restrictions
GetBindLocation	Returns the name of the player's Hearthstone location
GetBinding	Returns information about a key binding
GetBindingAction	Returns the action bound to a key or key combination
GetBindingByKey	Returns the action bound to a key or key combination
GetBindingKey	Returns the key combinations for a given binding command
GetBlockChance	Returns the player's percentage chance to block with a shield
GetBonusBarOffset	Returns the current "stance" offset for use with the bonus action bar
GetBonusBarOverrideBarType	This function is not yet documented
GetBuildInfo	Returns the version information about the client
GetBuybackItemInfo	Returns information about an item recently sold to a vendor and available to be repurchased
GetBuybackItemLink	Returns a hyperlink for an item recently sold to a vendor and available to be repurchased
GetCVar	Returns the value of a configuration variable
GetCVarBitfield	This function is not yet documented
GetCVarBool	Returns the value of a configuration variable in a format compatible with Lua conditional expressions
GetCVarDefault	Returns the default value of a configuration variable
GetCVarInfo	Returns information about a configuration variable
GetCallPetSpellInfo	This function is not yet documented
GetCategoryInfo	Returns information about an achievement/statistic category
GetCategoryList	Returns a list of all achievement categories
GetCategoryNumAchievements	Returns the number of achievements/statistics to display in a category
GetCemeteryPreference	This function is not yet documented
GetChannelDisplayInfo	Returns information about an entry in the channel list display
GetChannelList	Returns the list of the channels the player has joined
GetChannelName	Returns information about a chat channel
GetChannelRosterInfo	Returns information about a character in a chat channel in the channel list display
GetChatTypeIndex	Returns the numeric index corresponding to a chat message type
GetChatWindowChannels	Returns the saved list of channels to which a chat window is subscribed
GetChatWindowInfo	Returns the saved settings for a chat window
GetChatWindowMessages	Returns the saved list of messages to which a chat window is subscribed
GetChatWindowSavedDimensions	This function is not yet documented
GetChatWindowSavedPosition	This function is not yet documented
GetClickFrame	Returns the Frame object associated with the given name
GetCoinIcon	Returns an icon representing an amount of money
GetCoinText	Returns a localized string describing an amount of money
GetCoinTextureString	Returns a string with embedded coin icons describing an amount of money
GetCombatRating	Returns the value of a combat rating for the player
GetCombatRatingBonus	Returns the percentage effect for the player's current value of a given combat rating
GetComboPoints	Returns the player's number of combo points on the target.
GetCompanionCooldown	Returns cooldown information for a non-combat pet or mount
GetCompanionInfo	Returns information about a non-combat pet or mount
GetComparisonAchievementPoints	Returns the comparison unit's total achievement points earned
GetComparisonCategoryNumAchievements	Returns the number of achievements completed by the comparison unit within a category
GetComparisonStatistic	Returns the comparison unit's data for a statistic
GetContainerFreeSlots	Returns a list of open slots in a container
GetContainerItemCooldown	Returns cooldown information about an item in the player's bags
GetContainerItemDurability	Returns durability status for an item in the player's bags
GetContainerItemEquipmentSetInfo	Returns whether an item in the bags is a part of a saved item set.
GetContainerItemGems	Returns the gems socketed in an item in the player's bags
GetContainerItemID	Returns the item ID of an item in the player's bags
GetContainerItemInfo	Returns information about an item in the player's bags
GetContainerItemLink	Returns a hyperlink for an item in the player's bags
GetContainerItemPurchaseCurrency	This function is not yet documented
GetContainerItemPurchaseInfo	Returns information about alternate currencies refunded for returning an item to vendors
GetContainerItemPurchaseItem	Returns information about a specific currency refunded for returning an item to vendors
GetContainerItemQuestInfo	Returns quest information about an item in the player's bags
GetContainerNumFreeSlots	Returns the number of free slots in a container and the types of items it can hold
GetContainerNumSlots	Returns the number of slots in one of the player's bags
GetCorpseMapPosition	Returns the position of the player's corpse on the world map
GetCorpseRecoveryDelay	Returns the amount of time left until the player can recover their corpse
GetCritChance	Returns the player's melee critical strike chance
GetCritChanceFromAgility	Returns additional critical strike chance provided by Agility
GetCriteriaSpell	This function is not yet documented
GetCurrencyInfo	Returns information about a currency by ID
GetCurrencyLink	This function is not yet documented
GetCurrencyListInfo	Returns information about a currency type (or headers in the Currency UI)
GetCurrencyListLink	This function is not yet documented
GetCurrencyListSize	Returns the number of list entries to show in the Currency UI
GetCurrentArenaSeason	Returns a number identifying the current arena season
GetCurrentBindingSet	Returns which set of key bindings is currently in use
GetCurrentEventID	This function is not yet documented
GetCurrentGuildBankTab	Returns the currently selected guild bank tab
GetCurrentKeyBoardFocus	Returns the frame currently handling keyboard input
GetCurrentLevelFeatures	This function is not yet documented
GetCurrentLevelSpells	This function is not yet documented
GetCurrentMapAreaID	Returns an ID number for the current map zone
GetCurrentMapContinent	Returns the current world map continent
GetCurrentMapDungeonLevel	Returns which map image is currently selected on the world map (for zones which use more than one map image)
GetCurrentMapZone	Returns the current world map zone
GetCurrentMultisampleFormat	Returns the index of the current multisample setting
GetCurrentRaidDifficulty	This function is not yet documented
GetCurrentRefresh	This function is not yet documented
GetCurrentResolution	Returns the index of the current resolution setting
GetCurrentTitle	Returns the currently selected player title
GetCursorInfo	Returns information about the contents of the cursor
GetCursorMoney	Returns the amount of money currently on the cursor
GetCursorPosition	Returns the absolute position of the mouse cursor
GetDailyQuestsCompleted	Returns the number of daily quests the player has completed today
GetDeathReleasePosition	Returns the location of the graveyard where the player's spirit will appear upon release
GetDebugAnimationStats	This function is not yet documented
GetDebugSpellEffects	This function is not yet documented
GetDebugStats	This is a Blizzard internal functioninternal
GetDebugZoneMap	This is a Blizzard internal functioninternal
GetDefaultLanguage	Returns the name of the player character's default language
GetDefaultRaidDifficulty	This function is not yet documented
GetDefaultVideoOptions	This function is not yet documented
GetDemotionRank	This function is not yet documented
GetDestinationReforgeStats	This function is not yet documented
GetDistanceSqToQuest	Returns a (squared) distance to the quest objective location
GetDodgeChance	Returns the player's chance to dodge melee attacks
GetDownloadedPercentage	This function is not yet documented
GetDungeonDifficulty	Returns the 5 player selected dungeon difficulty
GetDungeonForRandomSlot	This function is not yet documented
GetEclipseDirection	Returns the direction in which the players eclipse is moving.
GetEquipmentSetInfo	Returns information about an equipment set (specified by index)
GetEquipmentSetInfoByName	Returns information about an equipment set
GetEquipmentSetItemIDs	Returns a table listing the items in an equipment set
GetEquipmentSetLocations	Returns a table listing the locations of the items in an equipment set
GetEventCPUUsage	Returns information about the CPU usage of an event
GetEventTime	This function is not yet documented
GetExistingLocales	Returns a list of installed localization packs for the WoW client
GetExistingSocketInfo	Returns information about a permanently socketed gem
GetExistingSocketLink	Returns a hyperlink for a permanently socketed gem
GetExpansionLevel	Returns the expansion level of the game
GetExpertise	Returns the player's current expertise value
GetExpertisePercent	Returns the reduction in chance to be dodged or parried conferred by the player's expertise value
GetExtendedItemInfo	This function is deprecated and should no longer be useddeprecated
GetFacialHairCustomization	Returns a token used for displaying facial feature customization options
GetFactionInfo	Returns information about a faction or header listing
GetFactionInfoByID	Returns information about a faction or header listing
GetFileStreamingStatus	This function is not yet documented
GetFirstTradeSkill	Returns the index of the first non-header in the trade skill listing
GetFlyoutID	Returns the internal flyoutID for a given flyout index
GetFlyoutInfo	Returns information about a flyout slot
GetFlyoutSlotInfo	Returns information about a flyout ability slot
GetFrameCPUUsage	Returns information about CPU usage by a frame's script handlers
GetFramerate	Returns the number of frames per second rendered by the client
GetFramesRegisteredForEvent	Returns all frames registered for a given event
GetFriendInfo	Returns information about a character on the player's friends list
GetFunctionCPUUsage	Returns information about CPU usage by a function
GetGMStatus	This is a Blizzard internal functioninternal
GetGMTicket	Requests GM ticket status from the serverserver
GetGMTicketCategories	Returns a list of available GM ticket categoriesdeprecated
GetGameTime	Returns the current realm (server) time
GetGamma	Returns the current display gamma setting
GetGlyphClearInfo	This function is not yet documented
GetGlyphInfo	Returns information about a glyph in the glyph list
GetGlyphLink	Gets a hyperlink for the contents of a glyph socket
GetGlyphSocketInfo	Returns information about a glyph socket and its contents
GetGossipActiveQuests	Returns a list of quests which can be turned in to the current Gossip NPC
GetGossipAvailableQuests	Returns a list of quests available from the current Gossip NPC
GetGossipOptions	Returns a list of interaction options for the Gossip NPC
GetGossipText	Returns greeting or other text to be displayed in an NPC dialog
GetGraphicsAPIs	This function is not yet documented
GetGreetingText	Returns the greeting text displayed for quest NPCs with multiple quests
GetGroupPreviewTalentPointsSpent	Returns the total number of points spent in the Talent UI's preview mode
GetGuildAchievementMemberInfo	This function is not yet documented
GetGuildAchievementMembers	This function is not yet documented
GetGuildAchievementNumMembers	This function is not yet documented
GetGuildApplicantInfo	This function is not yet documented
GetGuildApplicantSelection	This function is not yet documented
GetGuildBankBonusDepositMoney	This function is not yet documented
GetGuildBankItemInfo	Returns information about the contents of a guild bank item slot
GetGuildBankItemLink	Returns a hyperlink for an item in the guild bank
GetGuildBankMoney	Returns the amount of money in the guild bank
GetGuildBankMoneyTransaction	Returns information about a transaction in the guild bank money log
GetGuildBankTabCost	Returns the cost of the next available guild bank tab
GetGuildBankTabInfo	Returns information about a guild bank tab
GetGuildBankTabPermissions	Returns information about guild bank tab privileges for the guild rank currently being edited
GetGuildBankText	Returns text associated with a guild bank tab
GetGuildBankTransaction	Returns information about a transaction in the log for a guild bank tab
GetGuildBankWithdrawGoldLimit	This function is not yet documented
GetGuildBankWithdrawMoney	Returns the amount of money the player is allowed to withdraw from the guild bank per day
GetGuildCategoryList	This function is not yet documented
GetGuildChallengeInfo	This function is not yet documented
GetGuildCharterCost	Returns the cost to purchase a guild charter
GetGuildEventInfo	Returns information about an entry in the guild event log
GetGuildExpirationTime	This function is not yet documented
GetGuildFactionGroup	This function is not yet documented
GetGuildFactionInfo	This function is not yet documented
GetGuildInfo	Returns a unit's guild affiliation
GetGuildInfoText	Returns guild information text
GetGuildLevel	Returns the guild level as displayed in the guild pane
GetGuildLevelEnabled	This function is not yet documented
GetGuildLogoInfo	This function is not yet documented
GetGuildMemberRecipes	This function is not yet documented
GetGuildMembershipRequestInfo	This function is not yet documented
GetGuildMembershipRequestSettings	This function is not yet documented
GetGuildNewsFilters	This function is not yet documented
GetGuildNewsInfo	Returns information about an item of guild newsreview
GetGuildNewsMemberName	This function is not yet documented
GetGuildNewsSort	This function is not yet documented
GetGuildPerkInfo	This function is not yet documented
GetGuildRecipeInfoPostQuery	This function is not yet documented
GetGuildRecipeMember	This function is not yet documented
GetGuildRecruitmentComment	This function is not yet documented
GetGuildRecruitmentSettings	This function is not yet documented
GetGuildRewardInfo	This function is not yet documented
GetGuildRosterContribution	Returns weekly and total guild exp of a player
GetGuildRosterInfo	Returns information about the selected player in your guild roster.
GetGuildRosterLargestAchievementPoints	This function is not yet documented
GetGuildRosterLargestContribution	Return the weekly and total largest contibution
GetGuildRosterLastOnline	Returns the amount of time since a guild member was last online
GetGuildRosterMOTD	Returns the Message of the Day for the player's guild
GetGuildRosterSelection	Returns the index of the selected member in the guild roster
GetGuildRosterShowOffline	Returns whether the guild roster lists offline members
GetGuildTabardFileNames	Returns the textures that comprise the player's guild tabard
GetGuildTradeSkillInfo	This function is not yet documented
GetHairCustomization	Returns a token used for displaying "hair" customization options
GetHitModifier	This function is not yet documented
GetHolidayBGHonorCurrencyBonuses	Returns the awarded honor and arena points for a Call to Arms battleground win or loss
GetIgnoreName	Returns the name of a character on the ignore list
GetInboxHeaderInfo	Returns information about a mail in the player's inbox
GetInboxInvoiceInfo	Returns auction house invoice information for a mail
GetInboxItem	Returns information for an item attached to a mail in the player's inbox
GetInboxItemLink	Returns a hyperlink for an item attached to a mail in the player's inbox
GetInboxNumItems	Returns the number of mails in the player's inbox
GetInboxText	Returns information about the text of an inbox mail
GetInspectArenaTeamData	Returns arena team information about the currently inspected unit
GetInspectGuildInfo	This function is not yet documented
GetInspectHonorData	Returns PvP honor information about the currently inspected unit
GetInspectRatedBGData	This function is not yet documented
GetInstanceBootTimeRemaining	Returns the amount of time left until the player is removed from the current instance
GetInstanceDifficulty	Returns difficulty setting for the current dungeon/raid instance
GetInstanceInfo	Returns instance information about the current area
GetInstanceLockTimeRemaining	Returns time remaining before the player is saved to a recently entered instance
GetInstanceLockTimeRemainingEncounter	This function is not yet documented
GetInventoryAlertStatus	Returns the durability warning status of an equipped item
GetInventoryItemBroken	Returns whether an equipped item is broken
GetInventoryItemCooldown	Returns cooldown information about an equipped item
GetInventoryItemCount	Returns the number of items stacked in an inventory slot
GetInventoryItemDurability	Returns the current durability level of an equipped item
GetInventoryItemGems	Returns the gems socketed in an equipped item
GetInventoryItemID	Returns the item ID of an equipped item
GetInventoryItemLink	Returns an item link for an item in the unit's inventory
GetInventoryItemQuality	Returns the quality level of an equipped item
GetInventoryItemTexture	Returns the icon texture for an equipped item
GetInventoryItemsForSlot	Returns a list of items that can be equipped in a given inventory slot
GetInventorySlotInfo	Returns information about an inventory slot
GetItemCooldown	Returns cooldown information about an arbitrary item
GetItemCount	Returns information about how many of a given item the player has or on remaining item charges
GetItemFamily	Returns information about special bag types that can hold a given item
GetItemGem	Returns information about gems socketed in an item
GetItemIcon	Returns the path to an icon texture for the item
GetItemInfo	Returns information about an item, by name, link or id
GetItemQualityColor	Returns color values for use in displaying items of a given quality
GetItemSpell	Returns information about the spell cast by an item's "Use:" effect
GetItemStatDelta	Returns a summary of the difference in stat bonuses between two items
GetItemStats	Returns a summary of an item's stat bonuses
GetItemUniqueness	Returns information about uniqueness restrictions for equipping an item
GetLFDChoiceCollapseState	This function is not yet documented
GetLFDChoiceEnabledState	This function is not yet documented
GetLFDChoiceInfo	This function is not yet documented
GetLFDChoiceLockedState	This function is not yet documented
GetLFDChoiceOrder	This function is not yet documented
GetLFDLockInfo	This function is not yet documented
GetLFDLockPlayerCount	This function is not yet documented
GetLFGBootProposal	This function is not yet documented
GetLFGCompletionReward	Returns the various rewards for a completed LFG dungeon
GetLFGCompletionRewardItem	This function is not yet documented
GetLFGDeserterExpiration	This function is not yet documented
GetLFGDungeonInfo	Retrieves specific LFD information, not limited by player level and all dungeons can be looked up.
GetLFGDungeonRewardCapBarInfo	This function is not yet documented
GetLFGDungeonRewardCapInfo	This function is not yet documented
GetLFGDungeonRewardInfo	This function is not yet documented
GetLFGDungeonRewardLink	This function is not yet documented
GetLFGDungeonRewards	This function is not yet documented
GetLFGDungeonShortageRewardInfo	This function is not yet documented
GetLFGDungeonShortageRewardLink	This function is not yet documented
GetLFGInfoLocal	This function is not yet documented
GetLFGInfoServer	This function is not yet documented
GetLFGMode	Provides information about the LFG status of the player.framexml
GetLFGProposal	Returns info about the currently pending LFD operationreview
GetLFGProposalEncounter	This function is not yet documented
GetLFGProposalMember	This function is not yet documented
GetLFGQueueStats	This function is not yet documented
GetLFGQueuedList	This function is not yet documented
GetLFGRandomCooldownExpiration	This function is not yet documented
GetLFGRandomDungeonInfo	This function is not yet documented
GetLFGRoleShortageRewards	This function is not yet documented
GetLFGRoleUpdate	This function is not yet documented
GetLFGRoleUpdateMember	This function is not yet documented
GetLFGRoleUpdateSlot	This function is not yet documented
GetLFGRoles	Returns the group roles for which the player has signed up in the LFG system
GetLFGTypes	Returns a list of LFG query types
GetLFRChoiceOrder	This function is not yet documented
GetLanguageByIndex	Returns the localized name of a player character language
GetLastQueueStatusIndex	This function is not yet documented
GetLatestCompletedAchievements	Returns a list of the player's most recently earned achievements
GetLatestCompletedComparisonAchievements	Returns a list of the comparison unit's most recently earned achievements
GetLatestThreeSenders	Returns the names of the last three senders of new mail
GetLatestUpdatedComparisonStats	Returns a list of the comparison unit's latest updated statisticsdeprecated
GetLatestUpdatedStats	Returns a list of the player's latest updated statisticsdeprecated
GetLocale	Returns a code indicating the localization currently in use by the client
GetLookingForGuildComment	This function is not yet documented
GetLookingForGuildSettings	This function is not yet documented
GetLootMethod	Returns information about the current loot method in a party or raid
GetLootRollItemInfo	Returns information about an item currently up for loot rolling
GetLootRollItemLink	Returns a hyperlink for an item currently up for loot rolling
GetLootRollTimeLeft	Returns the amount of time remaining before loot rolling for an item expires
GetLootSlotInfo	Returns a hyperlink for an item available as loot
GetLootSlotLink	Returns a hyperlink for an item available as loot
GetLootThreshold	Returns the threshold used for Master Looter, Group Loot, and Need Before Greed loot methods
GetMacroBody	Returns the body text of a macro
GetMacroIconInfo	Returns the texture for a macro icon option
GetMacroIndexByName	Returns the index of a macro specified by name
GetMacroInfo	Returns information about a macro
GetMacroItem	Returns information about the item used by a macro
GetMacroItemIconInfo	Returns the texture for an item icon
GetMacroSpell	Returns information about the spell cast by a macro
GetMajorTalentTreeBonuses	Query a talent tree's major bonus
GetManaRegen	Returns information about the player's mana regeneration rate
GetMapContinents	Returns a list of map continents names
GetMapDebugObjectInfo	This is a Blizzard internal functioninternal
GetMapInfo	Returns information about the current world map texture
GetMapLandmarkInfo	Returns information about a map landmark
GetMapNameByID	Returns the localized name of a given map
GetMapOverlayInfo	Returns information about a world map overlay
GetMapZones	Returns the map zones for a given continent
GetMasterLootCandidate	Returns information about a given loot candidate
GetMastery	Returns the mastery value of your character
GetMaxAnimFramerate	This function is not yet documented
GetMaxArenaCurrency	Returns the maximum amount of arena points the player can accrue
GetMaxCombatRatingBonus	Returns the maximum possible percentage bonus for a given combat rating
GetMaxDailyQuests	Returns the maximum number of daily quests that can be completed each day.
GetMaxNumCUFProfiles	This function is not yet documented
GetMaxPlayerLevel	Returns the maximum level attainable by a player
GetMaxSpellStartRecoveryOffset	This function is not yet documented
GetMeleeHaste	Returns information about the player's melee haste
GetMerchantCurrencies	This function is not yet documented
GetMerchantItemCostInfo	Returns information about alternate currencies required to purchase an item from a vendor
GetMerchantItemCostItem	Returns information about currency items required to purchase an item from a vendor
GetMerchantItemInfo	Returns information about an item available for purchase from a vendor
GetMerchantItemLink	Returns a hyperlink for an item available for purchase from a vendor
GetMerchantItemMaxStack	Returns the maximum number of an item allowed in a single purchase
GetMerchantNumItems	Returns the number of different items available for purchase from a vendor
GetMinigameState	This is a Blizzard internal functioninternal
GetMinigameType	This is a Blizzard internal functioninternal
GetMinimapZoneText	Returns the name of the current area (as displayed in the Minimap)
GetMinorTalentTreeBonuses	Query a talent tree's minor bonuses
GetMirrorTimerInfo	Returns information about special countdown timers
GetMirrorTimerProgress	Returns a high-resolution value for a special countdown timer
GetModifiedClick	Returns the keys/buttons bound for a modified click action
GetModifiedClickAction	Returns the token identifying a modified click action
GetMoney	Returns the total amount of money currently in the player's possession
GetMonitorAspectRatio	Query a monitor's aspect ratio
GetMonitorCount	Returns the number of monitors connected
GetMonitorName	Returns the system name of a selected monitor
GetMouseButtonClicked	Returns which mouse button triggered the current script
GetMouseButtonName	Returns the name for a mouse button specified by number
GetMouseFocus	Returns the frame that is currently under the mouse, and has mouse input enabled.
GetMovieDownloadProgress	This function is not yet documented
GetMovieResolution	Returns the horizontal resolution available for displaying movie content
GetMultiCastBarOffset	This function is not yet documented
GetMultiCastTotemSpells	This function is not yet documented
GetMultisampleFormats	Returns a list of available multisample settings
GetMuteName	Returns the name of a character on the mute list
GetMuteStatus	Returns whether a character is muted or silenced
GetNamePlateMotionType	This function is not yet documented
GetNetIpTypes	This function is not yet documented
GetNetStats	Returns information about current network connection performance
GetNewSocketInfo	Returns information about a gem added to a socket
GetNewSocketLink	Returns a hyperlink for a gem added to a socket
GetNextAchievement	Returns the next achievement for an achievement which is part of a series
GetNextCompleatedTutorial	This function is not yet documented
GetNextPetTalentLevel	This function is not yet documented
GetNextTalentLevel	Returns the level at which the player gets the next talent point
GetNumActiveQuests	Returns the number of quests which can be turned in to the current Quest NPC
GetNumAddOns	Returns the number of addons in the addon listing
GetNumArchaeologyRaces	Return the amount of different races (branches) in Archeology
GetNumArenaOpponents	Returns the number of enemy players in an arena match
GetNumArenaTeamMembers	Returns the number of members in an arena team
GetNumArtifactsByRace	Return the amount of artifacts the player has acquired from the provided race
GetNumAuctionItems	Returns the number of auction items in a listing
GetNumAutoQuestPopUps	This function is not yet documented
GetNumAvailableQuests	Returns the number quests available from the current Quest NPC
GetNumBankSlots	Returns information about purchased bank bag slots
GetNumBattlefieldFlagPositions	Returns the number of battleground flags for which map position information is available
GetNumBattlefieldPositions	Returns the number of team members in the battleground not in the player's group
GetNumBattlefieldScores	Returns the number of participant scores available in the current battleground
GetNumBattlefieldStats	Returns the number of battleground-specific statistics on the current battleground's scoreboard
GetNumBattlefieldVehicles	Returns the number of special vehicles in the current zone
GetNumBattlegroundTypes	Returns the number of different battlegrounds available
GetNumBindings	Returns the number of entries in the key bindings list
GetNumBuybackItems	Returns the number of items recently sold to a vendor and available to be repurchased
GetNumChannelMembers	Returns the number of members in a chat channel
GetNumCompanions	Returns the number of mounts or non-combat pets the player can summon
GetNumComparisonCompletedAchievements	Returns the number of achievements earned by the comparison unit
GetNumCompletedAchievements	Returns the number of achievements earned by the player
GetNumDeclensionSets	Returns the number of suggested declension sets for a name
GetNumDisplayChannels	Returns the number of entries in the channel list display
GetNumDungeonForRandomSlot	This function is not yet documented
GetNumDungeonMapLevels	Returns the number of map images for the world map's current zone
GetNumEquipmentSets	Returns the number of saved equipment sets
GetNumFactions	Returns the number of entries in the reputation UI
GetNumFlyouts	Returns the number of flyout actions in the UI
GetNumFrames	Returns the number of existing Frame objects (and derivatives)
GetNumFriends	Returns the number of characters and online characters on the player's friends list
GetNumGlyphSockets	Currently unuseddeprecated
GetNumGlyphs	Returns the total amount of glyphs for the player's class
GetNumGossipActiveQuests	Returns the number of quests which can be turned in to the current Gossip NPC
GetNumGossipAvailableQuests	Returns the number of quests available from the current Gossip NPC
GetNumGossipOptions	Returns the number of non-quest dialog options for the current Gossip NPC
GetNumGuildApplicants	This function is not yet documented
GetNumGuildBankMoneyTransactions	Returns the number of transactions in the guild bank money log
GetNumGuildBankTabs	Returns the number of purchased tabs in the guild bank
GetNumGuildBankTransactions	Returns the number of entries in a guild bank tab's transaction log
GetNumGuildChallenges	This function is not yet documented
GetNumGuildEvents	Returns the number of entries in the guild event log
GetNumGuildMembers	Returns the number of members in the guild roster
GetNumGuildMembershipRequests	This function is not yet documented
GetNumGuildNews	Returns the total amount of guild news (filtered)
GetNumGuildPerks	Returns the total amount of guild perks (including unavailable ones)
GetNumGuildRewards	Return the total amount of guild rewards (including unavailable ones)
GetNumGuildTradeSkill	Returns the number of people and headers currently visible in the profession view of your guild window
GetNumIgnores	Returns the number of characters on the player's ignore list
GetNumLanguages	Returns the number of languages the player character can speak
GetNumLootItems	Returns the number of items available to be looted
GetNumMacroIcons	Returns the number of available macro icons
GetNumMacroItemIcons	Returns the number of available item icons
GetNumMacros	Returns the number of macros the player has stored
GetNumMapDebugObjects	This is a Blizzard internal functioninternal
GetNumMapLandmarks	Returns the number of landmarks on the world map
GetNumMapOverlays	Returns the number of overlays for the current world map zone
GetNumMembersInRank	This function is not yet documented
GetNumModifiedClickActions	Returns the number of modified click actions registered
GetNumMutes	Returns the number of characters on the player's mute list
GetNumNamePlateMotionTypes	This function is not yet documented
GetNumPackages	This function is deprecated and should no longer be useddeprecated
GetNumPartyMembers	Returns the number of additional members in the player's party
GetNumPetitionNames	Returns the number of people who have signed the open petition
GetNumQuestChoices	Returns the number of available quest rewards from which the player must choose one upon completing the quest presented by a questgiver
GetNumQuestCurrencies	This function is not yet documented
GetNumQuestItemDrops	This function is not yet documented
GetNumQuestItems	Returns the number of different items required to complete the quest presented by a questgiver
GetNumQuestLeaderBoards	Returns the number of quest objectives for a quest in the player's quest log
GetNumQuestLogChoices	Returns the number of available item reward choices for the selected quest in the quest log
GetNumQuestLogEntries	Returns the number of quests and headers in the quest log
GetNumQuestLogRewardCurrencies	This function is not yet documented
GetNumQuestLogRewardFactions	This function is not yet documented
GetNumQuestLogRewards	Returns the number of item rewards for the selected quest in the quest log
GetNumQuestRewards	Returns the number of different items always awarded upon completing the quest presented by a questgiver
GetNumQuestWatches	Returns the number of quests included in the objectives tracker
GetNumRaidMembers	Returns the number of members in the player's raid
GetNumRaidProfiles	This function is not yet documented
GetNumRandomDungeons	This function is not yet documented
GetNumRecruitingGuilds	This function is not yet documented
GetNumReforgeOptions	This function is not yet documented
GetNumRewardCurrencies	This function is not yet documented
GetNumRoutes	Returns the number of hops from the current location to another taxi node
GetNumSavedInstances	Returns the number of instances to which the player is saved
GetNumShapeshiftForms	Returns the number of abilities to be presented on the stance/shapeshift bar
GetNumSockets	Returns the number of sockets on the item currently being socketed
GetNumSpellTabs	Returns the number of tabs in the player's spellbook
GetNumStationeries	Returns the number of available stationery typesinternal
GetNumTalentGroups	Returns the number of talent specs a character can switch among
GetNumTalentPoints	Returns the total number of talent points a character has currently
GetNumTalentTabs	Returns the number of talent tabs for the player, pet, or inspect target
GetNumTalents	Returns the number of options in a talent tab
GetNumTitles	Returns the number of available player titles
GetNumTrackedAchievements	Returns the number of achievements flagged for display in the objectives tracker UI
GetNumTrackingTypes	Returns the number of available minimap object/unit tracking abilities
GetNumTradeSkills	Returns the number of entries in the trade skill listing
GetNumTrainerServices	Returns the number of entries in the trainer service listing
GetNumVoiceSessionMembersBySessionID	Returns the number of members in a voice channel
GetNumVoiceSessions	Returns the number of available voice channels
GetNumWarGameTypes	This function is not yet documented
GetNumWhoResults	Returns the number of results from a Who system query
GetNumWorldPVPAreas	This function is not yet documented
GetNumWorldStateUI	Returns the number of world state UI elements
GetNumberOfDetailTiles	This function is not yet documented
GetOSLocale	This function is not yet documented
GetObjectiveText	Returns a summary of objectives for the quest offered by a questgiver
GetOptOutOfLoot	Returns whether the player has opted out of loot rolls
GetOutdoorPVPWaitTime	Returns the world PvP wait time for the currently selected zone, nil otherwise. Authors looking for information regarding specific world PvP zones should consider using [[docs/api/GetWorldPVPAreaInfo|GetWorldPVPAreaInfo()]] instead.
GetOwnerAuctionItems	Requests data from the server for the list of auctions created by the playerserver
GetPVPDesired	Returns whether the player has manually enabled PvP status
GetPVPLifetimeStats	Returns the player's lifetime total of honorable kills and highest rank achieved
GetPVPRankInfo	Returns information about a given PvP rank index
GetPVPRankProgress	This function is deprecated and should no longer be useddeprecated
GetPVPRewards	This function is not yet documented
GetPVPSessionStats	Returns the number of kills and honor points scored by the player since logging in
GetPVPTimer	Returns the amount of time until the player's PVP flag expires
GetPVPYesterdayStats	Returns the number of kills and honor points scored by the player on the previous day
GetPackageInfo	This function is deprecated and should no longer be useddeprecated
GetParryChance	Returns the player's parry chance
GetPartyAssignment	Returns whether a party/raid member is assigned a specific group role
GetPartyLFGBackfillInfo	This function is not yet documented
GetPartyLeaderIndex	Returns the index of the current party leader
GetPartyMember	Returns whether a party member exists at a given index
GetPersonalRatedArenaInfo	This function is not yet documented
GetPersonalRatedBGInfo	This function is not yet documented
GetPetActionCooldown	Returns cooldown information about a given pet action slot
GetPetActionInfo	Returns information about a pet action
GetPetActionSlotUsable	Returns whether a pet action can be used
GetPetActionsUsable	Returns whether the pet's actions are usable
GetPetExperience	Returns information about experience points for the player's pet
GetPetFoodTypes	Returns a list of the food types the player's pet will eat
GetPetIcon	Returns an icon representing the current pet
GetPetMeleeHaste	This function is not yet documented
GetPetSpellBonusDamage	This function is not yet documented
GetPetTalentTree	Returns the name of the talent tree used by the player's current pet
GetPetTimeRemaining	Returns the time remaining before a temporary pet is automatically dismissed
GetPetitionInfo	Returns information about the currently open petition
GetPetitionNameInfo	Returns the name of a character who has signed the currently offered petition
GetPlayerFacing	Returns the player's orientation (heading)
GetPlayerInfoByGUID	Returns information about a player character identified by globally unique identifier
GetPlayerMapPosition	Returns the position of a unit in the player's party or raid on the world map
GetPlayerTradeCurrency	This function is not yet documented
GetPlayerTradeMoney	Returns the amount of money offered for trade by the player
GetPossessInfo	Returns information about special actions available while the player possesses another unit
GetPowerRegen	Returns information about the player's mana/energy/etc regeneration rate
GetPrevCompleatedTutorial	This function is not yet documented
GetPreviewPrimaryTalentTree	This function is not yet documented
GetPreviewTalentPointsSpent	This function is deprecated and should no longer be useddeprecated
GetPreviousAchievement	Returns the previous achievement for an achievement which is part of a series
GetPreviousArenaSeason	Returns a number identifying the previous arena season
GetPrimaryTalentTree	Returns the index of a character's primary talent tree.
GetProfessionInfo	Returns details on a profession from its index including name, icon, and skill level
GetProfessions	Returns indices of all of the current character's professions
GetProgressText	Returns the quest progress text presented by a questgiver
GetPromotionRank	This function is not yet documented
GetQuestBackgroundMaterial	Returns background display style information for a questgiver dialog
GetQuestCurrencyInfo	This function is not yet documented
GetQuestDifficultyColor	Returns a table of color values indicating the difficulty of a quest's level as compared to the player'sblizzarduiframexml
GetQuestGreenRange	Returns the level range in which a quest below the player's level still rewards XP
GetQuestID	Returns the internal ID of a quest featured in the currently active NPC dialogue (available after a QUEST_DETAIL event)
GetQuestIndexForTimer	Returns the quest log index of a timed quest's timer
GetQuestIndexForWatch	Returns the quest log index of a quest in the objectives tracker
GetQuestItemInfo	Returns information about items in a questgiver dialog
GetQuestItemLink	Returns a hyperlink for an item in a questgiver dialog
GetQuestLink	Returns a hyperlink for an entry in the player's quest log
GetQuestLogChoiceInfo	Returns information about available item rewards for the selected quest in the quest log
GetQuestLogCompletionText	Returns the completion text for the selected quest in the quest log
GetQuestLogCriteriaSpell	This function is not yet documented
GetQuestLogGroupNum	Returns the suggested group size for the selected quest in the quest log
GetQuestLogIndexByID	Returns the index at which a particular quest ID can be found in the log.
GetQuestLogIsAutoComplete	This function is not yet documented
GetQuestLogItemDrop	This function is not yet documented
GetQuestLogItemLink	Returns a hyperlink for an item related to the selected quest in the quest log
GetQuestLogLeaderBoard	Returns information about objectives for a quest in the quest log
GetQuestLogPortraitGiver	This function is not yet documented
GetQuestLogPortraitTurnIn	This function is not yet documented
GetQuestLogPushable	Return whether the selected quest in the quest log can be shared to party members
GetQuestLogQuestText	Returns the description and objective text for the selected quest in the quest log
GetQuestLogRequiredMoney	Returns the amount of money required for the selected quest in the quest log
GetQuestLogRewardCurrencyInfo	This function is not yet documented
GetQuestLogRewardFactionInfo	This function is not yet documented
GetQuestLogRewardInfo	Returns information about item rewards for the selected quest in the quest log
GetQuestLogRewardMoney	Returns the money reward for the selected quest in the quest log
GetQuestLogRewardSkillPoints	Returns skill point reward info for the selected quest in the quest log
GetQuestLogRewardSpell	Returns information about the spell reward for the selected quest in the quest log
GetQuestLogRewardTalents	Returns the talent point reward for the selected quest in the quest log
GetQuestLogRewardTitle	Returns the title reward for the selected quest in the quest log
GetQuestLogRewardXP	Returns the experience reward at the player's level for the selected quest in the quest log
GetQuestLogSelection	Returns the index of the selected quest in the quest log
GetQuestLogSpecialItemCooldown	Returns cooldown information about an item associated with a current quest
GetQuestLogSpecialItemInfo	Returns information about a usable item associated with a current quest
GetQuestLogSpellLink	Returns a hyperlink for a spell in the selected quest in the quest log
GetQuestLogTimeLeft	Returns time remaining for the selected quest in the quest log
GetQuestLogTitle	Returns information about an entry in the player's quest log
GetQuestMoneyToGet	Returns the amount of money required to complete the quest presented by a questgiver
GetQuestPOILeaderBoard	This function is not yet documented
GetQuestPortraitGiver	This function is not yet documented
GetQuestPortraitTurnIn	This function is not yet documented
GetQuestResetTime	Returns the amount of time remaining until the daily quest period resets
GetQuestReward	Finishes turning in a quest to a questgiver, selecting an item reward if applicable
GetQuestSortIndex	This function is not yet documented
GetQuestSpellLink	Returns a hyperlink for a spell in a questgiver dialog
GetQuestText	Returns the text for the quest offered by a questgiver
GetQuestTimers	Returns a list of the times remaining for any active timed quests
GetQuestWatchIndex	Returns the quest watch (objective tracker) index of a quest in the quest log
GetQuestWorldMapAreaID	This function is not yet documented
GetQuestsCompleted	Gets a table containing the quests the player has completed
GetRaidDifficulty	This function is not yet documented
GetRaidProfileFlattenedOptions	This function is not yet documented
GetRaidProfileName	This function is not yet documented
GetRaidProfileOption	This function is not yet documented
GetRaidProfileSavedPosition	This function is not yet documented
GetRaidRosterInfo	Returns information about a member of the player's raid
GetRaidRosterSelection	Returns the index of the selected unit in the raid roster
GetRaidTargetIndex	Returns the index of the raid target marker on a unit
GetRandomBGHonorCurrencyBonuses	This function is not yet documented
GetRandomDungeonBestChoice	This function is not yet documented
GetRangedCritChance	Returns the player's ranged critical strike chance
GetRangedHaste	Returns information about the player's ranged haste
GetRatedBattleGroundInfo	This function is not yet documented
GetReadyCheckStatus	Returns a unit's status during a ready check
GetReadyCheckTimeLeft	Returns the amount of time left on the current ready check
GetRealNumPartyMembers	Returns the number of members in the player's non-battleground party
GetRealNumRaidMembers	Returns the number of members in the player's non-battleground raid
GetRealZoneText	Returns the "official" name of the zone or instance in which the player is located
GetRealmName	Returns the name of the player's realm (server name)
GetRecruitingGuildInfo	This function is not yet documented
GetRecruitingGuildSelection	This function is not yet documented
GetRecruitingGuildSettings	This function is not yet documented
GetRecruitingGuildTabardInfo	This function is not yet documented
GetReforgeItemInfo	Returns information about the item currently in the 'reforge' slot.
GetReforgeItemStats	This function is not yet documented
GetReforgeOptionInfo	This function is not yet documented
GetRefreshRates	Returns a list of available screen refresh rates
GetRegisteredAddonMessagePrefixes	This function is not yet documented
GetReleaseTimeRemaining	Returns the amount of time remaining until the player's spirit is automatically released when dead
GetRepairAllCost	Returns the cost to repair all of the player's damaged items
GetResSicknessDuration	Returns the duration of resurrection sickness at the player's current level
GetRestState	Returns the player's current rest state
GetRestrictedAccountData	This function is not yet documented
GetRewardArenaPoints	Returns the amount of arena points awarded when completing a quest
GetRewardHonor	Returns the amount of honor points awarded when completing a quest
GetRewardMoney	Returns the amount of money awarded when completing a quest
GetRewardNumSkillUps	This function is not yet documented
GetRewardSkillLineID	This function is not yet documented
GetRewardSkillPoints	This function is not yet documented
GetRewardSpell	Returns information about a spell awarded when completing a quest
GetRewardTalents	Returns the talent points awarded when completing a quest
GetRewardText	Returns questgiver dialog to be displayed when completing a quest
GetRewardTitle	Returns the title awarded when completing a quest
GetRewardXP	Returns the experience awarded when completing a quest
GetRuneCooldown	Returns cooldown information about one of the player's rune resources
GetRuneCount	Returns the number of available rune resources in one of the player's rune slots
GetRuneType	Returns the type of one of the player's rune resources
GetRunningMacro	Returns the index of the currently running macro.
GetRunningMacroButton	Returns the mouse button that was used to activate the running macro
GetSavedInstanceChatLink	This function is not yet documented
GetSavedInstanceEncounterInfo	This function is not yet documented
GetSavedInstanceInfo	Returns information on a specific instance to which the player is saved
GetScreenHeight	Returns the height of the screen for UI layout purposes
GetScreenResolutions	Returns a list of available screen resolutions
GetScreenWidth	Returns the width of the screen for UI layout purposes
GetScriptCPUUsage	Returns the total CPU time used by the scripting system
GetSelectedArtifactInfo	Returns information about the currently selected artifact
GetSelectedAuctionItem	Returns the index of the currently selected item in an auction listing
GetSelectedDisplayChannel	Returns the selected channel in the channel list display
GetSelectedFaction	Returns which faction entry is selected in the reputation UI
GetSelectedFriend	Returns the index of the selected character in the player's friends list
GetSelectedGlyphSpellIndex	This function is not yet documented
GetSelectedIgnore	Returns the index of the selected character in the player's ignore list
GetSelectedMute	Returns the index of the selected entry in the Muted list
GetSelectedStationeryTexture	Returns the currently selected stationery typeinternal
GetSelectedWarGameType	This function is not yet documented
GetSendMailCOD	Returns the Cash-On-Delivery cost of the outgoing message
GetSendMailItem	Returns information for an item attached to the outgoing message
GetSendMailItemLink	Returns a hyperlink for an item attached to the outgoing message
GetSendMailMoney	Returns the amount of money to be sent with the outgoing message
GetSendMailPrice	Returns the cost to send the outgoing mail message
GetShapeshiftForm	Returns the index of the active ability on the stance/shapeshift bar
GetShapeshiftFormCooldown	Returns cooldown information about an ability on the stance/shapeshift bar
GetShapeshiftFormID	Returns the ID of the active shapeshift form
GetShapeshiftFormInfo	Returns information about an ability on the stance/shapeshift bar
GetShieldBlock	Returns the amount of damage prevented when the player blocks with a shield
GetSocketItemBoundTradeable	Returns whether the item open for socketing is temporarily tradeable
GetSocketItemInfo	Returns information about the item currently being socketed
GetSocketItemRefundable	Returns whether the item open for socketing is temporarily refundable
GetSocketTypes	Returns information about the gem types usable in a socket
GetSourceReforgeStats	This function is not yet documented
GetSpellAutocast	Returns information about automatic casting for a spell in the spellbook
GetSpellAvailableLevel	This function is not yet documented
GetSpellBonusDamage	Returns the player's spell damage bonus for a spell school
GetSpellBonusHealing	Returns the player's amount of bonus healing
GetSpellBookItemInfo	Retrieves information about a specific SpellBook item
GetSpellBookItemName	Returns the name and sub-text of a spell in the spellbook
GetSpellBookItemTexture	This function is not yet documented
GetSpellCooldown	Returns cooldown information about a spell in the spellbook
GetSpellCount	Returns the number of times a spell can be cast
GetSpellCritChance	Returns the player's spell critical strike chance for a spell school
GetSpellCritChanceFromIntellect	Returns additional spell critical strike chance provided by Intellect
GetSpellDescription	This function is not yet documented
GetSpellHitModifier	This function is not yet documented
GetSpellInfo	Returns information about a spell
GetSpellLink	Returns a hyperlink for a spell
GetSpellPenetration	Returns the amount of enemy magic resistance ignored due to the player's Spell Penetration Rating
GetSpellTabInfo	Returns information about a tab in the spellbook
GetSpellTexture	Returns the icon texture path for a spell
GetStablePetFoodTypes	Returns the types of food that a stabled pet will eat
GetStablePetInfo	Returns information about a stabled pet
GetStationeryInfo	Returns information about a stationery typeinternal
GetStatistic	Returns data for a statistic that can be shown on the statistics tab of the achievements window
GetStatisticsCategoryList	Returns a list of all statistic categories
GetSubZoneText	Returns the name of the minor area in which the player is located
GetSuggestedGroupNum	Returns the suggested group size for attempting the quest currently offered by a questgiver
GetSummonConfirmAreaName	Returns the destination area of an offered summons
GetSummonConfirmSummoner	Returns the name of the unit offering a summons to the player
GetSummonConfirmTimeLeft	Returns the amount of time remaining before an offered summons expires
GetSummonFriendCooldown	Returns cooldown information about the player's Summon Friend ability
GetSuperTrackedQuestID	This function is not yet documented
GetTabardCreationCost	Returns the cost to create a guild tabard
GetTabardInfo	This function is deprecated and should no longer be useddeprecated
GetTalentInfo	Returns information about a talent option
GetTalentLink	Returns a hyperlink for a talent
GetTalentPrereqs	Returns information about prerequisites to learning a talent
GetTalentTabInfo	Returns information about a talent tab
GetTalentTreeEarlySpells	This function is not yet documented
GetTalentTreeMasterySpells	This function is not yet documented
GetTalentTreeRoles	This function is not yet documented
GetTargetTradeCurrency	This function is not yet documented
GetTargetTradeMoney	Returns the amount of money offered for trade by the target
GetTaxiBenchmarkMode	Returns whether flight path benchmark mode is enabled
GetText	Returns a localized string according to given parameters
GetThreatStatusColor	Returns color values for a given threat status
GetTime	Returns a number representing the current time (with millisecond precision)
GetTimeToWellRested	This function is deprecated and should no longer be useddeprecated
GetTitleName	Returns the text of an available player title
GetTitleText	Returns the title text for the quest presented by a questgiver
GetToolTipInfo	This function is not yet documented
GetTotalAchievementPoints	Returns the player's total achievement points earned
GetTotemInfo	Returns information on a currently active totem (or ghoul)
GetTotemTimeLeft	Returns the time remaining before a totem (or ghoul) automatically disappears
GetTrackedAchievements	Returns numeric IDs of the achievements flagged for display in the objectives tracker UI
GetTrackingInfo	Returns information about a given tracking option
GetTradePlayerItemInfo	Returns information about an item offered for trade by the player
GetTradePlayerItemLink	Returns a hyperlink for an item offered for trade by the player
GetTradeSkillCooldown	Returns the time remaining on a trade skill recipe's cooldown
GetTradeSkillDescription	Returns descriptive text for a tradeskill recipe
GetTradeSkillIcon	Returns the icon for a trade skill recipe
GetTradeSkillInfo	Returns information about a trade skill header or recipe
GetTradeSkillInvSlotFilter	Returns whether the trade skill listing is filtered by a given item equipment slot
GetTradeSkillInvSlots	Returns a list of recipe equipment slots for the current trade skill
GetTradeSkillItemLevelFilter	Returns the current settings for filtering the trade skill listing by required level of items produced
GetTradeSkillItemLink	Returns a hyperlink for the item created by a tradeskill recipe
GetTradeSkillItemNameFilter	Returns the current search text for filtering the trade skill listing by name
GetTradeSkillLine	Returns information about the current trade skill
GetTradeSkillListLink	Returns a hyperlink to the player's list of recipes for the current trade skill
GetTradeSkillNumMade	Returns the number of items created when performing a tradeskill recipe
GetTradeSkillNumReagents	Returns the number of different reagents required for a trade skill recipe
GetTradeSkillReagentInfo	Returns information about a reagent in a trade skill recipe
GetTradeSkillReagentItemLink	Returns a hyperlink for a reagent in a tradeskill recipe
GetTradeSkillRecipeLink	Returns hyperlink for a tradeskill recipe
GetTradeSkillSelectionIndex	Returns the index of the currently selected trade skill recipe
GetTradeSkillSubClassFilter	Returns whether the trade skill listing is filtered by a given item subclass
GetTradeSkillSubClassFilteredSlots	This function is not yet documented
GetTradeSkillSubClasses	Returns a list of recipe subclasses for the current trade skill
GetTradeSkillTexture	This function is not yet documented
GetTradeSkillTools	Returns a list of required tools for a trade skill recipe
GetTradeTargetItemInfo	Returns information about an item offered for trade by the target
GetTradeTargetItemLink	Returns a hyperlink for an item offered for trade by the target
GetTradeskillRepeatCount	Returns the number of times the trade skill recipe currently being performed will repeat
GetTrainerGreetingText	Returns the current trainer's greeting text
GetTrainerSelectionIndex	Returns the index of the currently selected trainer service
GetTrainerServiceAbilityReq	Returns information about an ability required for purchasing a trainer service
GetTrainerServiceCost	Returns the cost to purchase a trainer service
GetTrainerServiceDescription	Returns the description of a trainer service
GetTrainerServiceIcon	Returns the icon for a trainer service
GetTrainerServiceInfo	Returns information about an entry in the trainer service listing
GetTrainerServiceItemLink	Returns a hyperlink for the item associated with a trainer service
GetTrainerServiceLevelReq	Returns the character level required to purchase a trainer service
GetTrainerServiceNumAbilityReq	Returns the number of ability requirements for purchasing a trainer service
GetTrainerServiceSkillLine	Returns the name of the skill line associated with a trainer service
GetTrainerServiceSkillReq	Returns information about the skill requirement for a trainer service
GetTrainerServiceStepIndex	This function is not yet documented
GetTrainerServiceTypeFilter	Returns whether the trainer service listing is filtered by a service status
GetTrainerTradeskillRankValues	This function is not yet documented
GetUnitHealthModifier	Returns the health modifier for the player's pet
GetUnitManaRegenRateFromSpirit	Returns the increase in mana regeneration rate provided by Spirit
GetUnitMaxHealthModifier	Returns the maximum health modifier for the player's pet
GetUnitName	Returns a string summarizing a unit's name and serverblizzarduiframexml
GetUnitPitch	Returns the player's current pitch (slope or angle of movement)
GetUnitPowerModifier	Returns the mana modifier for the player's pet
GetUnitSpeed	Returns a unit's current speed
GetUnspentTalentPoints	Returns the number of unused talent points
GetVehicleUIIndicator	This function is not yet documented
GetVehicleUIIndicatorSeat	This function is not yet documented
GetVideoCaps	Returns information about graphics capabilities of the current system
GetVideoOptions	Returns video options for different video quality levels
GetVoiceCurrentSessionID	Returns an identifier for the active voice session
GetVoiceSessionInfo	Returns information about a voice session
GetVoiceSessionMemberInfoBySessionID	Returns information about a member of a voice channel
GetVoiceStatus	Returns whether a character has voice chat enabled
GetWarGameQueueStatus	This is a Blizzard internal functioninternal
GetWarGameTypeInfo	This function is not yet documented
GetWatchedFactionInfo	Returns information about the "watched" faction (displayed on the XP bar in the default UI)
GetWeaponEnchantInfo	Returns information about temporary enchantments on the player's weapons
GetWhoInfo	Returns information about a character in the Who system query results
GetWorldPVPAreaInfo	Returns information about a given world PvP zone
GetWorldPVPQueueStatus	Returns information on the players queue for a world PvP zone
GetWorldStateUIInfo	Returns information about a world state UI element
GetXPExhaustion	Returns the amount of rested bonus experience available
GetZonePVPInfo	Returns PVP information about the current area
GetZoneText	Returns the name of the zone in which the player is located
GiveMasterLoot	Awards a loot item to a group member
GlyphMatchesSocket	Returns whether a socket is eligible for the glyph currently awaiting a target
GrantLevel	Grants a level to the player's Recruit-a-Friend partner
GuildControlAddRank	Adds a new rank to the player's guild
GuildControlDelRank	Deletes a guild rank
GuildControlGetAllowedShifts	This function is not yet documented
GuildControlGetNumRanks	Returns the number of ranks in the guild
GuildControlGetRankFlags	Returns the list of privileges for the guild rank being edited
GuildControlGetRankName	Returns the name of a guild rank
GuildControlSaveRank	Saves changes to the guild rank being edited
GuildControlSetRank	Chooses a guild rank to edit
GuildControlSetRankFlag	Enables or disables a privilege for the guild rank being edited
GuildControlShiftRankDown	This function is not yet documented
GuildControlShiftRankUp	This function is not yet documented
GuildDemote	Reduces a guild member's rank by one
GuildDisband	Disbands the player's guildconfirmation
GuildInfo	Requests guild information from the serverserver
GuildInvite	Invites a character to join the player's guild
GuildLeave	Leaves the player's current guildconfirmation
GuildNewsSetSticky	This function is not yet documented
GuildNewsSort	This function is not yet documented
GuildPromote	Increases a guild member's rank by one
GuildRoster	Requests guild roster information from the serverserver
GuildRosterSetOfficerNote	Sets the officer note for a guild member
GuildRosterSetPublicNote	Sets the public note for a guild member
GuildSetLeader	Promotes a member to guild leader
GuildSetMOTD	Sets the guild Message of the Day
GuildUIEnabled	This function is not yet documented
GuildUninvite	Removes a character from the player's guild
HasAction	Returns whether an action slot contains an action
HasAlternateForm	This function is not yet documented
HasCompletedAnyAchievement	Checks if the player has completed at least 1 achievement
HasDebugZoneMap	This is a Blizzard internal functioninternal
HasFullControl	Returns whether the player character can be controlled
HasInspectHonorData	Returns whether PvP honor and arena data for the currently inspected unit has been downloaded from the server
HasKey	Returns whether the player has any keys stored in the Keyring container
HasLFGRestrictions	This function is not yet documented
HasNewMail	Returns whether the player has received new mail since last visiting a mailbox
HasPetSpells	Returns whether the player's current pet has a spellbook
HasPetUI	Returns whether the pet UI should be displayed for the player's pet
HasSoulstone	Returns whether the player can instantly resurrect in place
HasTravelPass	This function is not yet documented
HasWandEquipped	Returns whether the player has a wand equipped
HearthAndResurrectFromArea	Instantly exits the current world PvP zone, returning to the player's Hearthstone location
HideRepairCursor	Returns the cursor to normal mode after use of [[docs/events/ShowRepairCursor|`ShowRepairCursor()`]]
InCinematic	Returns whether an in-game cinematic is playing
InCombatLockdown	Returns whether the user interface is protected due to combat
InGuildParty	This function is not yet documented
InRepairMode	Returns whether the item repair cursor mode is currently active
InboxItemCanDelete	Returns whether a message in the player's inbox can be deleted
InitWorldMapPing	Initializes the frame used to display the character location "ping" on the World Mapinternal
InitiateRolePoll	Initiates a raid-wide role check. Every raid member is required to set his own role in a popup role window.review
InitiateTrade	Offers to trade with a given unit
InteractUnit	Interacts with (as with right-clicking on) a unitprotected
InterfaceOptionsFrame_OpenToCategory	Opens the Interface Options window and displays a given panel within itblizzarduiframexml
InterfaceOptions_AddCategory	Registers a panel to be displayed in the Interface Options windowblizzarduiframexml
InviteUnit	Invites a character to the player's party or raid
IsAchievementEligible	This function is not yet documented
IsActionInRange	Returns whether the player's target is in range of an action
IsActiveBattlefieldArena	Returns whether the player is currently in an arena match
IsActiveQuestTrivial	Returns whether a quest which can be turned in to the current Quest NPC is trivial at the player's level
IsAddOnLoadOnDemand	Returns whether an addon can be loaded without restarting the UI
IsAddOnLoaded	Returns whether an addon is currently loaded
IsAddonMessagePrefixRegistered	This function is not yet documented
IsAltKeyDown	Returns whether an Alt key on the keyboard is held down.
IsArenaTeamCaptain	Returns whether the player is the captain of an arena team
IsArtifactCompletionHistoryAvailable	This function is not yet documented
IsAtStableMaster	Returns whether the player is interacting with a Stable Master NPC
IsAttackAction	Returns whether an action is the standard melee Attack action
IsAttackSpell	Returns whether a spell is the standard melee Attack spell
IsAuctionSortReversed	Returns whether a sort criterion is applied in reverse orderdeprecated
IsAutoRepeatAction	Returns whether an action is an automatically repeating action
IsAutoRepeatSpell	Returns whether a spell is an automatically repeating spell
IsAvailableQuestTrivial	Returns whether a quest available from the current Quest NPC is trivial at the player's level
IsBNLogin	This function is not yet documented
IsCemeterySelectionAvailable	This function is not yet documented
IsChatAFK	Returns whether the player's status is Away
IsChatDND	Returns whether the player's status is Busy
IsConsumableAction	Returns whether using an action consumes an item
IsConsumableItem	Returns whether an item is consumable
IsConsumableSpell	Returns whether casting a spell consumes a reagent item
IsControlKeyDown	Returns whether a Control key on the keyboard is held down
IsCurrentAction	Returns whether an action is currently being used
IsCurrentItem	Returns whether an item is being used
IsCurrentQuestFailed	Returns whether the player has failed the selected quest in the quest log
IsCurrentSpell	Returns whether a spell is currently being used
IsDebugBuild	This is a Blizzard internal functioninternal
IsDesaturateSupported	Returns whether the current hardware supports desaturated textures
IsDisplayChannelModerator	Returns whether the player is a moderator of the selected channel in the channel list display
IsDisplayChannelOwner	Returns whether the player is the owner of the selected channel in the channel list display
IsDressableItem	Returns whether an item's appearance can be previewed using the Dressing Room feature
IsDualWielding	This function is not yet documented
IsEquippableItem	Returns whether an item can be equipped
IsEquippedAction	Returns whether an action contains an equipped item
IsEquippedItem	Returns whether an item is currently equipped
IsEquippedItemType	Returns whether any items of a given type are currently equipped
IsFactionInactive	Returns whether a faction is flagged as "inactive"
IsFalling	Returns whether the player is currently falling
IsFishingLoot	Returns whether the currently displayed loot came from fishing
IsFlyableArea	Returns whether flight is allowed on the continent where the player is currently located
IsFlying	Returns whether the player is currently flying
IsGMClient	This is a Blizzard internal functioninternal
IsGlyphFlagSet	This function is not yet documented
IsGuildLeader	Returns whether or player is leader of his or her guild
IsGuildRankAssignmentAllowed	This function is not yet documented
IsHarmfulItem	Returns whether an item can be used against hostile units
IsHarmfulSpell	Returns whether a spell can be used against hostile units
IsHelpfulItem	Returns whether an item can be used on the player or friendly units
IsHelpfulSpell	Returns whether an item can be used on the player or friendly units
IsIPv6Available	Returns whether IPv6 is available.
IsIgnored	Returns whether a unit is on the player's ignore list
IsIgnoredOrMuted	Returns whether a unit can be heard due to ignored/muted status
IsInActiveWorldPVP	This function is not yet documented
IsInArenaTeam	Returns whether the player is on an arena team
IsInAuthenticatedRank	This function is not yet documented
IsInFakeRaid	This function is not yet documented
IsInGuild	Returns whether the player is in a guild
IsInInstance	Returns whether the player is in an instance (and its type if applicable)
IsInLFGDungeon	This function is not yet documented
IsIndoors	Returns whether the player is currently indoors
IsInventoryItemLocked	Returns whether an inventory slot is locked
IsItemInRange	Returns whether the player is in range to use an item on a unit
IsLFGDungeonJoinable	This function is not yet documented
IsLeftAltKeyDown	Returns whether the left Alt key is currently held down
IsLeftControlKeyDown	Returns whether the left Control key is held down
IsLeftShiftKeyDown	Returns whether the left Shift key on the keyboard is held down
IsLinuxClient	Returns whether the player is using the native Linux game client
IsListedInLFR	Returns whether the player is currently listed in the Raid Browser
IsLoggedIn	Returns whether the login process has completed
IsMacClient	Returns whether the player is using the Mac OS X game client
IsModifiedClick	Determines if the modifiers specified in the click-type had been held down while the button click occurred.
IsModifierKeyDown	Returns whether a modifier key is held down
IsMounted	Returns whether the player is mounted
IsMouseButtonDown	Returns whether a given mouse button is held down
IsMouselooking	Returns whether mouselook mode is active
IsMovieLocal	This function is not yet documented
IsMoviePlayable	This function is not yet documented
IsMuted	Returns whether a character has been muted by the player
IsOnTournamentRealm	Returns whether the player is on an Arena Tournament realm
IsOnePersonParty	This function is not yet documented
IsOutOfBounds	Returns whether the player is currently outside the bounds of the world
IsOutdoors	Returns whether the player is currently outdoors
IsPVPTimerRunning	Returns whether the player's PvP flag will expire after a period of time
IsPartyLFG	This function is not yet documented
IsPartyLeader	Returns whether the player is the party leader
IsPassiveSpell	Returns whether a spell is passive (cannot be cast)
IsPetAttackAction	This function is not yet documented
IsPetAttackActive	Returns whether the pet's attack action is currently active
IsPossessBarVisible	Returns whether a special action bar should be shown while the player possesses another unit
IsQuestCompletable	Returns whether the player can complete the quest presented by a questgiver
IsQuestLogSpecialItemInRange	Returns whether the player's target is in range for using an item associated with a current quest
IsQuestWatched	Returns whether a quest from the quest log is listed in the objectives tracker
IsRaidLeader	Returns whether the player is the raid leader
IsRaidMarkerActive	This function is not yet documented
IsRaidOfficer	Returns whether the player is a raid assistant
IsRatedBattleground	This function is not yet documented
IsRatedMap	This function is not yet documented
IsRealPartyLeader	Returns whether the player is the leader of a non-battleground party
IsRealRaidLeader	Returns whether the player is the leader of a non-battleground raid
IsReferAFriendLinked	Returns whether a unit's account is linked to the player's via the Recruit-a-Friend program
IsResting	Returns whether the player is currently resting
IsRightAltKeyDown	Returns whether the right Alt key is currently held down
IsRightControlKeyDown	Returns whether the right Control key on the keyboard is held down
IsRightShiftKeyDown	Returns whether the right shift key on the keyboard is held down
IsSelectedSpellBookItem	This function is not yet documented
IsShiftKeyDown	Returns whether a Shift key on the keyboard is held down
IsSilenced	Returns whether a character is silenced on a chat channel
IsSpellInRange	Returns whether the player is in range to cast a spell on a unit
IsSpellKnown	Returns whether the player (or pet) knows a spell
IsSpellOverlayed	Checks if a given spell ID has an active spell overlay
IsStackableAction	Returns whether an action uses stackable items
IsStealthed	Returns whether the player is currently stealthed
IsStereoVideoAvailable	Returns whether the current system supports stereoscopic 3D display
IsSubZonePVPPOI	Returns whether the current area has PvP (or other) objectives to be displayed
IsSubmerged	This function is not yet documented
IsSwimming	Returns whether the player is currently swimming
IsThreatWarningEnabled	Returns whether the default Aggro Warning UI should currently be shown
IsTitleKnown	Returns whether the player has earned the ability to display a title
IsTrackedAchievement	Returns whether an achievement is flagged for display in the objectives tracker UI
IsTradeSkillGuild	This function is not yet documented
IsTradeSkillLinked	Returns whether the TradeSkill UI is showing another player's skill
IsTradeskillTrainer	Returns whether the player is interacting with a trade skill trainer (as opposed to a class trainer)
IsTrialAccount	This function is not yet documented
IsTutorialFlagged	This function is not yet documented
IsUnitOnQuest	Returns whether a unit is on one of the quests in the player's quest log
IsUsableAction	Returns whether an action is usable
IsUsableItem	Returns whether an item can currently be used
IsUsableSpell	Returns whether or not a given spell is usable or cannot be used due to lack of mana
IsUsingVehicleControls	This is a Blizzard internal functioninternal
IsVehicleAimAngleAdjustable	Returns whether the player is controlling a vehicle weapon with adjustable aim angle
IsVehicleAimPowerAdjustable	This is a Blizzard internal functioninternal
IsVoiceChatAllowed	Returns whether the player is allowed to enable the voice chat featurereview
IsVoiceChatAllowedByServer	Returns whether voice chat is supported by the realm server
IsVoiceChatEnabled	Returns whether the voice chat system is enabled
IsWindowsClient	Returns whether the player is using the Windows game client
IsXPUserDisabled	Returns whether experience gain has been disabled for the player
IsZoomOutAvailable	This function is not yet documented
ItemAddedToArtifact	This function is not yet documented
ItemHasRange	Returns whether an item has a range limitation for its use
ItemTextGetCreator	Returns the original author of the currently viewed text item
ItemTextGetItem	Returns the name of the currently viewed text item
ItemTextGetMaterial	Returns display style information for the currently viewed text item
ItemTextGetPage	Returns the current page number in the currently viewed text item
ItemTextGetText	Returns the text of the currently viewed text item
ItemTextHasNextPage	Returns whether the currently viewed text item has additional pages
ItemTextNextPage	Moves to the next page in the currently viewed text item
ItemTextPrevPage	Moves to the previous page in the currently viewed text item
JoinArena	This function is not yet documented
JoinBattlefield	Joins the queue for a battleground instance
JoinChannelByName	This function is deprecated and should no longer be useddeprecated
JoinLFG	Joins the player to the LFG system
JoinPermanentChannel	Joins a channel, saving associated chat window settings
JoinRatedBattlefield	This function is not yet documented
JoinTemporaryChannel	Joins a channel, but does not save associated chat window settings
JumpOrAscendStart	Causes the player character to jump (or begins ascent if swimming or flying)protected
KBArticle_BeginLoading	Requests a specific knowledge base article from the serverserver
KBArticle_GetData	Returns information about the last requested knowledge base article
KBArticle_IsLoaded	Returns whether the requested knowledge base article has been loaded
KBQuery_BeginLoading	Queries the knowledge base server for articlesserver
KBQuery_GetArticleHeaderCount	Returns the number of articles on the current knowledge base search result page
KBQuery_GetArticleHeaderData	Returns information about an article returned in a knowledge base query
KBQuery_GetTotalArticleCount	Returns the total number of articles returned for the given query
KBQuery_IsLoaded	Returns whether results of a knowledge base query have been loaded
KBSetup_BeginLoading	Loads a maximum number of "Top Issues" from a given page
KBSetup_GetArticleHeaderCount	Returns the number of "Top Issues" articles on the current page
KBSetup_GetArticleHeaderData	Returns header information about a "Top Issue" article
KBSetup_GetCategoryCount	Returns the number of available knowledge base categories
KBSetup_GetCategoryData	Returns information about a knowledge base category
KBSetup_GetLanguageCount	Returns the number of available knowledge base languages
KBSetup_GetLanguageData	Returns information about a given knowledge base language
KBSetup_GetSubCategoryCount	Returns the number of available subcategories for a given category
KBSetup_GetSubCategoryData	Returns information a knowledge base subcategory
KBSetup_GetTotalArticleCount	Returns the number of "Top Issues" articles
KBSetup_IsLoaded	Returns whether the knowledge base default query has completed successfully
KBSystem_GetMOTD	Returns the currently knowledge base MOTD
KBSystem_GetServerNotice	Returns the text of the knowledge base server system notice
KBSystem_GetServerStatus	Returns the knowledge base server system status message
LFGTeleport	Teleports the player to or from their current LFG dungeon
LearnPreviewTalents	Commits changes made in the Talent UI's preview modeconfirmation
LearnTalent	Learns a talent, spending one talent point
LeaveBattlefield	Immediately exits the current battleground instance
LeaveChannelByName	Leaves a chat channel
LeaveLFG	Leave the LFG queue.
LeaveParty	Exits the current party or raid
ListChannelByName	Requests the list of participants in a chat channelserver
ListChannels	Requests a list of channels joined by the playerserver
LoadAddOn	Loads a LoadOnDemand-capable addon
LoadBindings	Loads a set of key bindings
LoadURLIndex	This function is not yet documented
LoggingChat	Enables or disables saving chat text to a file
LoggingCombat	Enables or disables saving combat log data to a file
Logout	Attempts to log out and return to the character selection screen
LootSlot	Attempts to pick up an item available as loot
LootSlotIsCoin	Returns whether a loot slot contains money
LootSlotIsCurrency	Returns whether a loot slot contains a currency
LootSlotIsItem	Returns whether a loot slot contains an item
MakeMinigameMove	This is a Blizzard internal functioninternal
ModifyEquipmentSet	Modifies the name and icon of an existing equipment set
MouseOverrideCinematicDisable	This function is not yet documented
MouselookStart	Enables mouselook mode, in which cursor movement rotates the camera
MouselookStop	Disables mouselook mode
MoveAndSteerStart	Begins moving the player character forward while steering via mouse movementprotected
MoveAndSteerStop	Ends movement initiated by [[docs/api/MoveAndSteerStart|`MoveAndSteerStart`]]protected
MoveBackwardStart	Begins moving the player character backwardprotected
MoveBackwardStop	Ends movement initiated by [[docs/api/MoveBackwardStart|`MoveBackwardStart`]]protected
MoveForwardStart	Begins moving the player character forwardprotected
MoveForwardStop	Ends movement initiated by [[docs/api/MoveForwardStart|`MoveForwardStart`]]protected
MoveViewDownStart	Begins orbiting the camera downward (to look upward)
MoveViewDownStop	Ends camera movement initiated by [[docs/api/MoveViewDownStart|`MoveViewDownStart`]]
MoveViewInStart	Begins zooming the camera inward (towards/through the player character)
MoveViewInStop	Ends camera movement initiated by [[docs/api/MoveViewInStart|`MoveViewInStart`]]
MoveViewLeftStart	Begins orbiting the camera around the player character to the left
MoveViewLeftStop	Ends camera movement initiated by [[docs/api/MoveViewLeftStart|`MoveViewLeftStart`]]
MoveViewOutStart	Begins zooming the camera outward (away from the player character)
MoveViewOutStop	Ends camera movement initiated by [[docs/api/MoveViewOutStart|`MoveViewOutStart`]]
MoveViewRightStart	Begins orbiting the camera around the player character to the right
MoveViewRightStop	Ends camera movement initiated by [[docs/api/MoveViewRightStart|`MoveViewRightStart`]]
MoveViewUpStart	Begins orbiting the camera upward (to look down)
MoveViewUpStop	Ends camera movement initiated by [[docs/api/MoveViewUpStart|`MoveViewUpStart`]]
MovieRecording_Cancel	Cancels video recording and compressionmaconly
MovieRecording_DataRate	Returns the data rate required for a given set of video recording parametersmaconly
MovieRecording_DeleteMovie	Deletes an uncompressed moviemaconly
MovieRecording_GetAspectRatio	Returns the aspect ratio of the game displaymaconly
MovieRecording_GetMovieFullPath	Returns a path to the movie currently being recorded or compressedmaconly
MovieRecording_GetProgress	Returns information about movie compression progressmaconly
MovieRecording_GetTime	Returns the amount of time since video recording was last startedmaconly
MovieRecording_GetViewportWidth	Returns the current width of the game displaymaconly
MovieRecording_IsCodecSupported	Returns whether a video codec is supported on the current systemmaconly
MovieRecording_IsCompressing	Returns whether a movie file is currently being compressedmaconly
MovieRecording_IsCursorRecordingSupported	Returns whether the current system supports recording the mouse cursor in moviesmaconly
MovieRecording_IsRecording	Returns whether movie recording is currently in progressmaconly
MovieRecording_IsSupported	Returns whether movie recording is supported on the current system
MovieRecording_MaxLength	Returns the maximum length of recorded video for a given set of video recording parametersmaconly
MovieRecording_QueueMovieToCompress	Queues an uncompressed movie for compressionmaconly
MovieRecording_SearchUncompressedMovie	Enables or disables a search for uncompressed moviesmaconly
MovieRecording_Toggle	Begins or ends video recordingmaconly
MovieRecording_ToggleGUI	Enables or disables inclusion of UI elements in a video recordingmaconly
MusicPlayer_BackTrack	Causes iTunes to return to the previous track playedprotectedmaconly
MusicPlayer_NextTrack	Causes iTunes to play the next track in sequenceprotectedmaconly
MusicPlayer_PlayPause	Causes iTunes to start or pause playbackprotectedmaconly
MusicPlayer_VolumeDown	Causes iTunes to lower its playback volumeprotectedmaconly
MusicPlayer_VolumeUp	Causes iTunes to raise its playback volumeprotectedmaconly
NewGMTicket	Opens a new GM support ticketprotected
NextView	Moves the camera to the next predefined setting
NoPlayTime	Returns whether the player has exceeded the allowed play time limit
NotWhileDeadError	Causes the default UI to display an error message indicating that actions are disallowed while the player is dead
NotifyInspect	Marks a unit for inspection and requests talent data from the serverserver
NumTaxiNodes	Returns the number of flight points on the taxi map
OfferPetition	Requests an arena or guild charter signature from the targeted unit
OffhandHasWeapon	Returns whether the player has an equipped weapon in the off hand slot
OpenCalendar	Queries the server for calendar status informationserver
OpenTrainer	This function is deprecated and should no longer be useddeprecated
OpeningCinematic	Displays the introductory cinematic for the player's race
PartialPlayTime	Returns whether the player is near the allowed play time limit
PartyLFGStartBackfill	This function is not yet documented
PetAbandon	Releases the player's petconfirmation
PetAggressiveMode	Enables aggressive mode for the player's petprotected
PetAssistMode	This function is not yet documented
PetAttack	Instructs the pet to attackprotected
PetCanBeAbandoned	Returns whether the player's pet can be abandoned
PetCanBeDismissed	Returns whether a Dismiss Pet command should be available for the player's pet
PetCanBeRenamed	Returns whether the player's pet can be renamed
PetDefensiveMode	Enables defensive mode for the player's petprotected
PetDismiss	Dismisses the currently controlled pet
PetFollow	Instructs the pet to follow the playerprotected
PetHasActionBar	Returns whether the player's current pet has an action bar
PetMoveTo	Commands the player's pet to move to the targeted destinationprotected
PetPassiveMode	Enables passive mode for the player's petprotected
PetRename	Renames the currently controlled pet
PetStopAttack	Instructs the pet to stop attackingprotected
PetWait	Instructs the pet to stay at its current locationprotected
PickupAction	Puts the contents of an action bar slot onto the cursor or the cursor contents into an action bar slotnocombat
PickupBagFromSlot	Puts an equipped container onto the cursor
PickupCompanion	Puts a non-combat pet or mount onto the cursor
PickupContainerItem	Picks up an item from or puts an item into a slot in one of the player's bags or other containers
PickupCurrency	This function is not yet documented
PickupEquipmentSet	Puts an equipment set (specified by index) on the cursor
PickupEquipmentSetByName	Puts an equipment set on the cursor
PickupGuildBankItem	Picks up an item from or puts an item into the guild bank
PickupGuildBankMoney	Puts money from the guild bank onto the cursor
PickupInventoryItem	Picks up an item from or puts an item into an equipment slot
PickupItem	Puts an arbitrary item onto the cursor
PickupMacro	Puts a macro onto the cursor
PickupMerchantItem	Puts an item available for purchase from a vendor onto the cursor
PickupPetAction	Puts the contents of a pet action slot onto the cursor or the cursor contents into a pet action slot
PickupPlayerMoney	Puts an amount of the player's money onto the cursor
PickupSpell	Puts a spell from the player's or pet's spellbook onto the cursor
PickupSpellBookItem	This function is not yet documented
PickupStablePet	Puts a pet from the stables onto the cursor
PickupTradeMoney	Puts money offered by the player for trade onto the cursor
PitchDownStart	Begins adjusting the player character's angle of vertical movement downwardprotected
PitchDownStop	Ends movement initiated by [[docs/api/PitchDownStart|`PitchDownStart`]]protected
PitchUpStart	Begins adjusting the player character's angle of vertical movement upwardprotected
PitchUpStop	Ends movement initiated by [[docs/api/PitchUpStart|`PitchUpStart`]]protected
PlaceAction	Puts the contents of the cursor into an action bar slotnocombat
PlaceAuctionBid	Places a bid on (or buys out) an auction itemconfirmation
PlaceGlyphInSocket	Applies the glyph currently awaiting a target to a socketconfirmation
PlaceRaidMarker	This function is not yet documented
PlayAutoAcceptQuestSound	This function is not yet documented
PlayDance	This is a Blizzard internal functioninternal
PlayMusic	Plays an audio file as background music
PlaySound	Plays one of WoW's built-in sound effects
PlaySoundFile	Plays an audio file at a given path
PlaySoundKitID	This function is not yet documented
PlayerCanTeleport	Returns whether the player can accept a summons
PlayerHasHearthstone	Returns whether the player has a hearthstone in their bag
PlayerIsPVPInactive	Returns whether a battleground participant is inactive (and eligible for reporting as AFK)
PortGraveyard	This function is not yet documented
PositionMiniWorldMapArrowFrame	This is a Blizzard internal functioninternal
PositionWorldMapArrowFrame	This is a Blizzard internal functioninternal
PreloadMovie	This function is not yet documented
PrevView	Moves the camera to the previous predefined setting
ProcessMapClick	Possibly changes the WorldMap based on a mouse click
ProcessQuestLogRewardFactions	This function is not yet documented
PromoteToAssistant	Promotes a raid member to raid assistant
PromoteToLeader	Promotes a player to party/raid leader
PurchaseSlot	Purchases the next available bank slotconfirmation
PutItemInBackpack	Puts the item on the cursor into the player's backpack
PutItemInBag	Puts the item on the cursor into one of the player's bags or other containers
QueryAuctionItems	Requests data from the server for the list of auctions meeting given search criteriaserver
QueryGuildBankLog	Requests the item transaction log for a guild bank tab from the serverserver
QueryGuildBankTab	Requests information about the contents of a guild bank tab from the serverserver
QueryGuildBankText	Requests guild bank tab info text from the serverserver
QueryGuildEventLog	Requests guild event log information from the serverserver
QueryGuildMembersForRecipe	This function is not yet documented
QueryGuildNews	This function is not yet documented
QueryGuildRecipes	This function is not yet documented
QueryGuildXP	Queries the server to update the guild experience informationserver
QueryQuestsCompleted	Queries the server for the player's completed quest informationserver
QuestChooseRewardError	Causes the default UI to display an error message indicating that the player must choose a reward to complete the quest presented by a questgiver
QuestFlagsPVP	Returns whether accepting the offered quest will flag the player for PvP
QuestGetAutoAccept	This function is not yet documented
QuestGetAutoLaunched	This function is not yet documented
QuestIsDaily	This function is not yet documented
QuestIsFromAreaTrigger	This function is not yet documented
QuestIsWeekly	This function is not yet documented
QuestLogPushQuest	Shares a quest with other group members
QuestLogShouldShowPortrait	This function is not yet documented
QuestMapUpdateAllQuests	This function is not yet documented
QuestPOIGetIconInfo	This function is not yet documented
QuestPOIGetQuestIDByIndex	This function is not yet documented
QuestPOIGetQuestIDByVisibleIndex	This function is not yet documented
QuestPOIUpdateIcons	This function is not yet documented
Quit	Attempts to exit the World of Warcraft client
RaidProfileExists	This function is not yet documented
RaidProfileHasUnsavedChanges	This function is not yet documented
RandomRoll	Initiates a public, server-side "dice roll"server
ReadFile	This is a Blizzard internal functioninternal
ReforgeItem	This function is not yet documented
RefreshLFGList	This function is not yet documented
RefreshWorldMap	This function is not yet documented
RegisterAddonMessagePrefix	This function is not yet documented
RegisterCVar	Registers a configuration variable to be saved
RegisterForSave	Enables a global variable for automatic saving upon logout & UI reloadinternalprotected
RegisterForSavePerCharacter	Enables a global variable for automatic saving (on a per-character basis) upon logout & UI reloadinternalprotected
RegisterStaticConstants	This function is not yet documented
RejectProposal	Rejects a LFG dungeon invite.
ReloadUI	Reloads the user interfacehardware
RemoveAutoQuestPopUp	This function is not yet documented
RemoveChatWindowChannel	Removes a channel from a chat window's list of saved channel subscriptions
RemoveChatWindowMessages	Removes a message type from a chat window's list of saved message subscriptions
RemoveFriend	Removes a character from the friends list
RemoveGlyphFromSocket	Removes the glyph from a socketconfirmation
RemoveItemFromArtifact	This function is not yet documented
RemoveQuestWatch	Removes a quest from the objectives tracker
RemoveTrackedAchievement	Removes an achievement from the objectives tracker UI
RenamePetition	Renames the guild or arena team to be created by the open petition
RepairAllItems	Attempts to repair all of the player's damaged items
ReplaceEnchant	Confirms replacing an existing enchantmentconfirmation
ReplaceTradeEnchant	Confirms replacement of an existing enchantment when offering an enchantment for tradeconfirmation
RepopMe	Releases the player's spirit to the nearest graveyard
ReportBug	This function is deprecated and should no longer be useddeprecated
ReportPlayerIsPVPAFK	Reports a battleground participant as AFK
ReportSuggestion	This function is deprecated and should no longer be useddeprecated
RequestArtifactCompletionHistory	Queries the server for the player's artifact completion historyserver
RequestBattlefieldPositions	Requests information from the server about team member positions in the current battlegroundserver
RequestBattlefieldScoreData	Requests battlefield score data from the serverserver
RequestBattlegroundInstanceInfo	Requests information about available instances of a battleground from the serverserver
RequestGuildApplicantsList	This function is not yet documented
RequestGuildChallengeInfo	This function is not yet documented
RequestGuildMembership	This function is not yet documented
RequestGuildMembershipList	This function is not yet documented
RequestGuildPartyState	This function is not yet documented
RequestGuildRecruitmentSettings	This function is not yet documented
RequestGuildRewards	This function is not yet documented
RequestInspectHonorData	Requests PvP honor and arena data from the server for the currently inspected unitserver
RequestLFDPartyLockInfo	This function is not yet documented
RequestLFDPlayerLockInfo	Requests instance lockout and Call to Arms dungeon reward information.server
RequestPVPOptionsEnabled	This function is not yet documentedserver
RequestPVPRewards	This function is not yet documented
RequestRaidInfo	Requests information about saved instances from the serverserver
RequestRatedArenaInfo	This function is not yet documented
RequestRatedBattlegroundInfo	This function is not yet documented
RequestRecruitingGuildsList	This function is not yet documented
RequestTimePlayed	Requests information from the server about the player character's total time spent onlineserver
ResetCPUUsage	Resets CPU usage statistics
ResetChatColors	Removes all saved color settings for chat message types, resetting them to default values
ResetChatWindows	Removes all saved chat window settings, resetting them to default values
ResetCursor	Returns the cursor to its normal appearance (the glove pointer) and behavior
ResetDisabledAddOns	Reverts changes to the enabled/disabled state of addons
ResetGroupPreviewTalentPoints	Reverts all changes made in the Talent UI's preview mode
ResetInstances	Resets all non-saved instances associated with the player
ResetPerformanceValues	This is a Blizzard internal functioninternal
ResetPreviewTalentPoints	Reverts changes made within a specific tab in the Talent UI's preview mode
ResetTutorials	Enables contextual tutorial display and clears the list of already displayed tutorials
ResetView	Resets a saved camera setting to default values
ResistancePercent	Returns the % value of spell resistance depending on resistance value and player level
RespondInstanceLock	Allows leaving a recently entered instance to which the player would otherwise be saved
RespondMailLockSendItem	This function is not yet documented
RestartGx	Restart the client's graphic subsystem
RestoreRaidProfileFromCopy	This function is not yet documented
ResurrectGetOfferer	Returns the name of a unit offering to resurrect the player
ResurrectHasSickness	Returns whether accepting an offered resurrection spell will cause the player to suffer Resurrection Sickness
ResurrectHasTimer	Returns whether the player must wait before resurrecting
RetrieveCorpse	Confirms resurrection by returning to the player's corpse
ReturnInboxItem	Returns a message in the player's inbox to its sender
RollOnLoot	Register the player's intent regarding an item up for loot rolling
RunBinding	Runs the script associated with a key binding action
RunMacro	Runs a macroprotected
RunMacroText	Runs arbitrary text as a macroprotected
RunScript	Runs a string as a Lua script
SaveBindings	Saves the current set of key bindings
SaveEquipmentSet	Saves or creates an equipment set with the player's currently equipped itemsconfirmation
SaveRaidProfileCopy	This function is not yet documented
SaveView	Saves the current camera settings
Screenshot	Saves an image of the current game display
SearchGuildRecipes	This function is not yet documented
SearchLFGGetEncounterResults	This function is not yet documented
SearchLFGGetJoinedID	This function is not yet documented
SearchLFGGetNumResults	This function is not yet documented
SearchLFGGetPartyResults	This function is not yet documented
SearchLFGGetResults	This function is not yet documented
SearchLFGJoin	This function is not yet documented
SearchLFGLeave	This function is not yet documented
SearchLFGSort	This function is not yet documented
SecondsToTime	Returns a description of an amount of time in appropriate unitsblizzarduiframexml
SecureCmdOptionParse	Returns the action (and target, if applicable) for a secure macro command
SelectActiveQuest	Selects a quest which can be turned in to the current Quest NPC
SelectAvailableQuest	Chooses a quest available from the current Quest NPC
SelectGossipActiveQuest	Chooses a quest which can be turned in to the current Gossip NPC
SelectGossipAvailableQuest	Chooses a quest available from the current Gossip NPC
SelectGossipOption	Chooses and activates an NPC dialog option
SelectPackage	This function is deprecated and should no longer be useddeprecated
SelectQuestLogEntry	Selects a quest from the quest log
SelectStationery	Selects a given stationery for usage when sending mailinternal
SelectTradeSkill	Selects a recipe in the trade skill listing
SelectTrainerService	Selects an entry in the trainer service listing
SendAddonMessage	Sends a chat-like message receivable by other addons
SendChatMessage	Sends a chat messageserver
SendMail	Sends the outgoing message
SendSystemMessage	This function is not yet documented
SendWho	Requests a list of characters meeting given search criteria from the serverserver
SetAbandonQuest	Begins the process of abandoning a quest in the player's quest log
SetAchievementComparisonPortrait	This function is not yet documented
SetAchievementComparisonUnit	Enables comparing achievements/statistics with another player
SetActionBarToggles	Configures display of additional ActionBars in the default UI
SetActiveTalentGroup	Switches the player's active talent specialization
SetActiveVoiceChannel	Sets the currently active voice channel
SetActiveVoiceChannelBySessionID	Sets the currently active voice chat channel
SetAllowLowLevelRaid	Enabling this if your character is below level 10 will allow you to join a raid group.
SetArenaTeamRosterSelection	Selects a member in an arena team roster
SetArenaTeamRosterShowOffline	Enables or disables the inclusion of offline members in arena team roster listingsdeprecated
SetAuctionsTabShowing	This function is not yet documented
SetAutoDeclineGuildInvites	This function is not yet documented
SetBagPortraitTexture	Sets a Texture object to display the icon of one of the player's bags
SetBarSlotFromIntro	This function is not yet documented
SetBarberShopAlternateFormFrame	This function is not yet documented
SetBattlefieldScoreFaction	Filters the battleground scoreboard by faction/team
SetBinding	Binds a key combination to a binding command
SetBindingClick	Binds a key combination to "click" a Button object
SetBindingItem	Binds a key combination to use an item in the player's possession
SetBindingMacro	Binds a key combination to run a macro
SetBindingSpell	Binds a key combination to cast a spell
SetCVar	Sets the value of a configuration variable
SetCVarBitfield	This function is not yet documented
SetCemeteryPreference	This function is not yet documented
SetChannelOwner	Gives channel ownership to another character
SetChannelPassword	Sets a password on a custom chat channel
SetChannelWatch	This is a Blizzard internal functioninternal
SetChatColorNameByClass	Sets whether the player names should be colored by class for a given chat type
SetChatWindowAlpha	Saves a chat window's background opacity setting
SetChatWindowColor	Saves a chat window's background color setting
SetChatWindowDocked	Saves whether a chat window should be docked with the main chat window
SetChatWindowLocked	Saves whether a chat window is locked
SetChatWindowName	Saves a chat window's display name setting
SetChatWindowSavedDimensions	This function is not yet documented
SetChatWindowSavedPosition	This function is not yet documented
SetChatWindowShown	Saves whether a chat window should be shown
SetChatWindowSize	Saves a chat window's font size setting
SetChatWindowUninteractable	Saves whether a chat window is marked as non-interactive
SetConsoleKey	This is a Blizzard internal functioninternal
SetCurrencyBackpack	Sets a currency type to be watched on the Backpack UI
SetCurrencyUnused	Moves a currency type to or from the Unused currencies list
SetCurrentGuildBankTab	Selects a tab in the guild bank
SetCurrentTitle	Changes a player's displayed titlehardware
SetCursor	Changes the mouse cursor image
SetDefaultVideoOptions	This function is not yet documented
SetDungeonDifficulty	Sets the player's 5 player dungeon difficulty preference
SetDungeonMapLevel	Sets the world map to display a certain map image (for zones that use multiple map images)
SetEuropeanNumbers	Sets the decimal separator for displayed numbers
SetFactionActive	Removes the "inactive" status from a faction
SetFactionInactive	Flags a faction as inactive
SetFocusedAchievement	This function is not yet documented
SetFriendNotes	Sets note text associated with a friends list entry
SetGamma	Changes the display gamma setting
SetGlyphFilter	This function is not yet documented
SetGlyphNameFilter	This function is not yet documented
SetGuildApplicantSelection	This function is not yet documented
SetGuildBankTabInfo	Sets the name and icon for a guild bank tab
SetGuildBankTabItemWithdraw	This function is not yet documented
SetGuildBankTabPermissions	Changes guild bank tab permissions for the guild rank being edited
SetGuildBankText	Sets the info text for a guild bank tab
SetGuildBankWithdrawGoldLimit	This function is not yet documented
SetGuildInfoText	Sets the guild information text.
SetGuildMemberRank	This function is not yet documented
SetGuildNewsFilter	This function is not yet documented
SetGuildRecruitmentComment	This function is not yet documented
SetGuildRecruitmentSettings	This function is not yet documented
SetGuildRosterSelection	Selects a member in the guild roster
SetGuildRosterShowOffline	Enables or disables inclusion of offline members in the guild roster listing
SetGuildTradeSkillCategoryFilter	This function is not yet documented
SetGuildTradeSkillItemNameFilter	This function is not yet documented
SetInventoryPortraitTexture	Sets a Texture object to display the icon of an equipped item
SetLFGBootVote	This function is not yet documented
SetLFGComment	Associates a brief text comment with the player's listing in the LFG system
SetLFGDungeon	Sets a flag indicating that the player would like to join a given dungeon/queue
SetLFGDungeonEnabled	This function is not yet documented
SetLFGHeaderCollapsed	This function is not yet documented
SetLFGRoles	Sets group roles for which to advertise the player in the LFG system
SetLayoutMode	This is a Blizzard internal functioninternal
SetLookingForGuildComment	This function is not yet documented
SetLookingForGuildSettings	This function is not yet documented
SetLootMethod	Sets the loot method for a party or raid group
SetLootPortrait	Sets a Texture object to show the appropriate portrait image when looting
SetLootThreshold	Sets the threshold used for Master Looter, Group Loot, and Need Before Greed loot methods
SetMacroItem	Changes the item used for dynamic feedback for a macro
SetMacroSpell	Changes the spell used for dynamic feedback for a macro
SetMapByID	Sets the map based on a specified ID
SetMapToCurrentZone	Sets the world map to show the zone in which the player is located
SetMapZoom	Sets the world map to show a specific zone or continent
SetMaxAnimFramerate	This function is not yet documented
SetModifiedClick	Sets a modified click for a given action
SetMouselookOverrideBinding	Overrides the default mouselook bindings to perform another binding with the mouse buttons
SetMultiCastSpell	Sets a multi-cast action slot to a given spell
SetMultisampleFormat	Changes the multisample setting
SetNamePlateMotionType	This function is not yet documented
SetNextBarberShopStyle	Selects the next style for a barber shop style option
SetOptOutOfLoot	Changes the player's preference to opt out of loot rolls
SetOverrideBinding	Sets an override binding for a binding command
SetOverrideBindingClick	Sets an override binding to "click" a Button object
SetOverrideBindingItem	Sets an override binding to use an item in the player's possession
SetOverrideBindingMacro	Sets an override binding to run a macro
SetOverrideBindingSpell	Set an override binding to a specific spell
SetPOIIconOverlapDistance	This function is not yet documented
SetPOIIconOverlapPushDistance	This function is not yet documented
SetPVP	Enables or disables the player's desired PvP status
SetPartyAssignment	Assigns a group role to a member of the player's party or raidprotected
SetPetSlot	This function is not yet documented
SetPetStablePaperdoll	Sets the given Model to show the selected stabled pet
SetPortraitTexture	Sets a Texture object to show a portrait of a unit
SetPortraitToTexture	Sets a Texture object to display an arbitrary texture, altering it to fit a circular frame
SetPreviewPrimaryTalentTree	This function is not yet documented
SetPrimaryTalentTree	This function is not yet documented
SetRaidDifficulty	Sets the player's raid dungeon difficulty preference
SetRaidProfileOption	This function is not yet documented
SetRaidProfileSavedPosition	This function is not yet documented
SetRaidRosterSelection	Selects a unit in the raid roster
SetRaidSubgroup	Moves a raid member to a non-full raid subgroup
SetRaidTarget	Puts a raid target marker on a unit
SetRaidTargetProtected	This function is not yet documented
SetRecruitingGuildSelection	This function is not yet documented
SetReforgeFromCursorItem	This function is not yet documented
SetRefresh	This function is not yet documented
SetSavedInstanceExtend	This function is not yet documented
SetScreenResolution	Changes the screen resolution
SetSelectedArtifact	This function is not yet documented
SetSelectedAuctionItem	Selects an item in an auction listing
SetSelectedDisplayChannel	Selects a channel in the channel list display
SetSelectedFaction	Selects a faction in the reputation UI
SetSelectedFriend	Selects a character in the player's friends list
SetSelectedIgnore	Selects a character in the player's ignore list
SetSelectedMute	Selects an entry in the Muted list
SetSelectedWarGameType	This function is not yet documented
SetSendMailCOD	Sets the Cash-On-Delivery cost of the outgoing message
SetSendMailMoney	Sets the amount of money to be sent with the outgoing message
SetSendMailShowing	Enables or disables shortcuts for attaching items to outgoing mail
SetSpellbookPetAction	This function is not yet documented
SetSuperTrackedQuestID	This function is not yet documented
SetTaxiBenchmarkMode	Enables or disables flight path benchmark mode
SetTaxiMap	Sets a Texture object to show the appropriate flight map texture
SetTracking	Enables a given minimap object/unit tracking ability
SetTradeCurrency	This function is not yet documented
SetTradeMoney	Offers an amount of money for trade
SetTradeSkillInvSlotFilter	Filters the trade skill listing by equipment slot of items produced
SetTradeSkillItemLevelFilter	Filters the trade skill listing by required level of items produced
SetTradeSkillItemNameFilter	Filters the trade skill listing by name of recipe, item produced, or reagents
SetTradeSkillSubClassFilter	Filters the trade skill listing by subclass of items produced
SetTrainerServiceTypeFilter	Filters the trainer service listing by service status
SetUIVisibility	Enables or disables display of UI elements in the 3-D world
SetView	Moves the camera to a saved camera setting
SetWatchedFactionIndex	Makes a faction the "watched" faction (displayed on the XP bar in the default UI)
SetWhoToUI	Changes the delivery method for results from [[docs/api/SendWho|`SendWho()`]] queries
SetupFullscreenScale	Sizes a frame to take up the entire screen regardless of screen resolution
ShiftQuestWatches	This function is not yet documented
ShowBuybackSellCursor	Changes the cursor to prepare for repurchasing an item recently sold to a vendor
ShowCloak	Enables or disables display of the player's cloak
ShowContainerSellCursor	Changes the cursor to prepare for selling an item in the player's bags to a vendor
ShowFriends	Requests friends/ignore list information from the serverserver
ShowHelm	Enables or disables display of the player's headgear
ShowInventorySellCursor	Changes the cursor to prepare for selling an equipped item to a vendor
ShowMerchantSellCursor	Changes the cursor to prepare for buying an item from a vendor
ShowMiniWorldMapArrowFrame	Shows or hides the battlefield minimap's player arrow
ShowQuestComplete	This function is not yet documented
ShowQuestOffer	This function is not yet documented
ShowRepairCursor	Puts the cursor in item repair mode
ShowWorldMapArrowFrame	This is a Blizzard internal functioninternal
ShowingCloak	Returns whether the player's cloak is displayed
ShowingHelm	Returns whether the player's headgear is displayed
SignPetition	Signs the currently offered petition
SilenceMember	This function is deprecated and should no longer be useddeprecated
SitStandOrDescendStart	Causes the player character to sit down if standing and vice versa (or begins descent if swimming or flying)protected
SocketContainerItem	Opens an item from the player's bags for socketing
SocketInventoryItem	Opens an equipped item for socketing
SocketItemToArtifact	This function is not yet documented
SolveArtifact	This function is not yet documented
SortArenaTeamRoster	Sorts the selected arena team's roster
SortAuctionApplySort	Applies a set of auction listing sort criteria set via [[docs/api/SortAuctionSetSort|`SortAuctionSetSort`]]
SortAuctionClearSort	Clears any current sorting rules for an auction house listing
SortAuctionItems	Sorts the auction house listingdeprecated
SortAuctionSetSort	Builds a list of sort criteria for auction listings
SortBGList	This function is not yet documented
SortBattlefieldScoreData	Sorts the battleground scoreboard
SortGuildRoster	Sorts the guild roster
SortGuildTradeSkill	This function is not yet documented
SortQuestWatches	Sorts the quests listed in the watch frame based on the set criteria
SortWho	Sorts the Who system query results list
Sound_ChatSystem_GetInputDriverNameByIndex	Returns the name of the given chat system sound input driver
Sound_ChatSystem_GetNumInputDrivers	Returns the number of chat system sound input drivers
Sound_ChatSystem_GetNumOutputDrivers	Returns the number of chat system sound output drivers
Sound_ChatSystem_GetOutputDriverNameByIndex	Returns the name of the given chat system sound output driver
Sound_GameSystem_GetInputDriverNameByIndex	Returns the name of the given game sound input driver
Sound_GameSystem_GetNumInputDrivers	Returns the number of game sound input drivers
Sound_GameSystem_GetNumOutputDrivers	Returns the number of game sound output drivers
Sound_GameSystem_GetOutputDriverNameByIndex	Returns the name of the given game sound output driver
Sound_GameSystem_RestartSoundSystem	Restarts the game's sound systems
SpellCanTargetGlyph	Returns whether the spell currently awaiting a target requires a glyph slot to be chosen
SpellCanTargetItem	Returns whether the spell currently awaiting a target requires an item to be chosen
SpellCanTargetUnit	Returns whether the spell currently awaiting a target can target a given unit
SpellCancelQueuedSpell	This function is not yet documented
SpellHasRange	Returns whether an item has a range limitation for its use
SpellIsTargeting	Returns whether a spell is currently awaiting a target
SpellStopCasting	Stops casting or targeting the spell in progressprotected
SpellStopTargeting	Cancels the spell currently awaiting a targetprotected
SpellTargetItem	Casts the spell currently awaiting a target on an itemprotected
SpellTargetUnit	Casts the spell currently awaiting a target on a unitprotected
SplitContainerItem	Picks up only part of a stack of items from one of the player's bags or other containers
SplitGuildBankItem	Picks up only part of a stack of items from the guild bank
StartAttack	Begins auto-attack against a specified targetprotected
StartAuction	Creates an auction for the item currently in the "auction item" slot
StartDuel	Challenges another player to a duel
StartUnratedArena	This function is not yet documented
StartWarGame	This is a Blizzard internal functioninternal
StopAttack	Stops auto-attack if activeprotected
StopCinematic	Exits a currently playing in-game cinematic
StopMacro	Stops execution of a running macroprotected
StopMusic	Stops currently playing in-game music
StopTradeSkillRepeat	Cancels repetition of a trade skill recipe
Stopwatch_Clear	This function is not yet documentedframexml
Stopwatch_FinishCountdown	This function is not yet documentedframexml
Stopwatch_IsPlaying	This function is not yet documentedframexml
Stopwatch_Pause	This function is not yet documentedframexml
Stopwatch_Play	This function is not yet documentedframexml
Stopwatch_StartCountdown	This function is not yet documentedframexml
Stopwatch_Toggle	Toggles visibility of the StopwatchFrameframexml
StrafeLeftStart	Begins moving the player character sideways to his or her leftprotected
StrafeLeftStop	Ends movement initiated by [[docs/api/StrafeLeftStart|`StrafeLeftStart`]]protected
StrafeRightStart	Begins moving the player character sideways to his or her rightprotected
StrafeRightStop	Ends movement initiated by [[docs/api/StrafeRightStart|`StrafeRightStart`]]protected
Stuck	Uses the auto-unstuck featureprotected
SummonFriend	Summons a unit whose account is linked to the player's via the Recruit-a-Friend program
SummonRandomCritter	Summons a random critter companion
SwapRaidSubgroup	Swaps two raid members between subgroups in the raid
TakeInboxItem	Retrieves an item attachment from a message in the player's inbox (accepting COD charges if applicable)confirmation
TakeInboxMoney	Retrieves any money attached to a mail in the player's inbox
TakeInboxTextItem	Requests a copy of a mail's body text as an item
TakeTaxiNode	Embarks on a taxi flight to a given destination
TargetDirectionEnemy	This is a Blizzard internal functioninternalprotected
TargetDirectionFinished	This is a Blizzard internal functioninternalprotected
TargetDirectionFriend	This is a Blizzard internal functioninternalprotected
TargetLastEnemy	Targets the most recently targeted enemy unitprotected
TargetLastFriend	Targets the most recently targeted friendly unitprotected
TargetLastTarget	Targets the most recently targeted unitprotected
TargetNearest	Cycles targets through nearest units regardless of reaction/affiliationprotected
TargetNearestEnemy	Cycles your target through the nearest enemy unitsprotected
TargetNearestEnemyPlayer	Cycles targets through nearby enemy player unitsprotected
TargetNearestFriend	Cycles targets through nearby friendly unitsprotected
TargetNearestFriendPlayer	Cycles targets through nearby friendly player unitsprotected
TargetNearestPartyMember	Cycles targets through nearby party membersprotected
TargetNearestRaidMember	Cycles targets through nearby raid membersprotected
TargetTotem	Targets one of the player's totems (or a Death Knight's ghoul)protected
TargetUnit	Targets a unitprotected
TaxiGetDestX	Returns the horizontal coordinate of a taxi flight's destination node
TaxiGetDestY	Returns the vertical coordinate of a taxi flight's destination node
TaxiGetSrcX	Returns the horizontal coordinate of a taxi flight's source node
TaxiGetSrcY	Returns the vertical coordinate of a taxi flight's source node
TaxiNodeCost	Returns the cost to fly to a given taxi node
TaxiNodeGetType	Returns the type of a flight pont
TaxiNodeName	Returns the name of a flight point
TaxiNodePosition	Returns the position of a flight point on the taxi map
TaxiNodeSetCurrent	Sets the "current" flight path node
TeleportToDebugObject	This is a Blizzard internal functioninternal
ToggleAnimKitDisplay	This function is not yet documented
ToggleAutoRun	Starts or stops the player character automatically moving forwardprotected
ToggleCollision	This is a Blizzard internal functioninternal
ToggleCollisionDisplay	This is a Blizzard internal functioninternal
ToggleGlyphFilter	This function is not yet documented
TogglePVP	Switches the player's desired PvP status
TogglePerformanceDisplay	This is a Blizzard internal functioninternal
TogglePerformancePause	This is a Blizzard internal functioninternal
TogglePerformanceValues	This is a Blizzard internal functioninternal
TogglePetAutocast	Turns autocast on or off for a pet actionprotected
TogglePlayerBounds	This is a Blizzard internal functioninternal
TogglePortals	This is a Blizzard internal functioninternal
ToggleRun	Switches the character's ground movement mode between running and walkingprotected
ToggleSheath	Sheaths or unsheaths the player character's hand-held items
ToggleSpellAutocast	Enables or disables automatic casting of a spell
ToggleTris	This is a Blizzard internal functioninternal
TradeSkillOnlyShowMakeable	Filters the trade skill listing by whether the player currently has enough reagents for each recipe
TradeSkillOnlyShowSkillUps	Filters the trade skill listing by whether the player can gain skill ranks from each recipe
TriggerTutorial	This function is not yet documented
TurnInGuildCharter	Turns in a completed guild charter
TurnLeftStart	Begins turning the player character to the leftprotected
TurnLeftStop	Ends movement initiated by [[docs/api/TurnLeftStart|`TurnLeftStart`]]protected
TurnOrActionStart	Begins character steering or interaction (equivalent to right-clicking in the 3-D world)protected
TurnOrActionStop	Ends action initiated by [[docs/api/TurnOrActionStart|`TurnOrActionStart`]]protected
TurnRightStart	Begins turning the player character to the rightprotected
TurnRightStop	Ends movement initiated by [[docs/api/TurnRightStart|`TurnRightStart`]]protected
UnSilenceMember	This function is deprecated and should no longer be useddeprecated
UninviteUnit	Removes a character from the player's party or raid
UnitAffectingCombat	Returns whether a unit is currently in combat
UnitAlternatePowerInfo	Returns information about a unit's alternate power display
UnitAlternatePowerTextureInfo	This function is not yet documented
UnitArmor	Returns the player's or pet's armor value
UnitAttackBothHands	Returns information about the player's or pet's weapon skill
UnitAttackPower	Returns the player's or pet's melee attack power
UnitAttackSpeed	Returns information about the player's or pet's melee attack speed
UnitAura	Returns information about buffs/debuffs on a unit
UnitBuff	Returns information about a buff on a unit
UnitCanAssist	Returns whether one unit can assist another
UnitCanAttack	Returns whether one unit can attack another
UnitCanCooperate	Returns whether two units can cooperate
UnitCastingInfo	Returns information about the spell a unit is currently casting
UnitChannelInfo	Returns information about the spell a unit is currently channeling
UnitClass	Returns a unit's class
UnitClassBase	Returns a unit's class
UnitClassification	Returns a unit's classification
UnitControllingVehicle	Returns whether a unit is controlling a vehicle
UnitCreatureFamily	Returns the creature family of the unit
UnitCreatureType	Returns the creature type of a unit
UnitDamage	Returns information about the player's or pet's melee attack damage
UnitDebuff	Returns information about a debuff on a unit
UnitDefense	Returns the player's or pet's Defense skill
UnitDetailedThreatSituation	Returns detailed information about the threat status of one unit against another
UnitExists	Returns whether a unit exists
UnitFactionGroup	Returns a unit's primary faction allegiance
UnitGUID	Returns a unit's globally unique identifier
UnitGetAvailableRoles	Get what roles a unit can play in the group or raid
UnitGetGuildLevel	This function is not yet documented
UnitGetGuildXP	Returns information about a unit's guild experience
UnitGetIncomingHeals	This function is not yet documented
UnitGroupRolesAssigned	Returns information about a unit's role in a LFD party
UnitHPPerStamina	This function is not yet documented
UnitHasIncomingResurrection	This function is not yet documented
UnitHasLFGDeserter	This function is not yet documented
UnitHasLFGRandomCooldown	This function is not yet documented
UnitHasRelicSlot	Returns whether a unit has a relic slot instead of a ranged weapon slot
UnitHasVehiclePlayerFrameUI	This function is not yet documented
UnitHasVehicleUI	Returns whether a unit is controlling a vehicle or vehicle weapon
UnitHealth	Returns a unit's current amount of health
UnitHealthMax	Returns a unit's maximum health value
UnitInBattleground	Returns whether a unit is in same battleground instance as the player
UnitInParty	Returns whether a unit is a player unit in the player's party
UnitInPhase	This function is not yet documented
UnitInRaid	Returns whether a unit is in the player's raid
UnitInRange	Returns whether a party/raid member is nearby
UnitInVehicle	Returns whether a unit is in a vehicle
UnitInVehicleControlSeat	Returns whether a unit controls a vehicle
UnitIsAFK	Returns whether a unit is marked AFK (Away From Keyboard)
UnitIsCharmed	Returns whether a unit is currently charmed
UnitIsConnected	Returns whether a unit is connected (i.e. not Offline)
UnitIsControlling	Returns whether a unit is controlling another unit
UnitIsCorpse	Returns whether a unit is a corpse
UnitIsDND	Returns whether a unit is marked DND (Do Not Disturb)
UnitIsDead	Returns whether a unit is dead
UnitIsDeadOrGhost	Returns whether a unit is either dead or a ghost
UnitIsEnemy	Returns whether two units are enemies
UnitIsFeignDeath	Returns whether a unit is feigning death
UnitIsFriend	Returns whether two units are friendly
UnitIsGhost	Returns whether a unit is currently a ghost
UnitIsInMyGuild	Returns whether a unit is in the player's guild
UnitIsPVP	Returns whether a unit is flagged for PvP activity
UnitIsPVPFreeForAll	Returns whether a unit is flagged for free-for-all PvP
UnitIsPVPSanctuary	Returns whether a unit is in a Sanctuary area preventing PvP activity
UnitIsPartyLeader	Returns whether a unit is the leader of the player's party
UnitIsPlayer	Returns whether a unit is a player unit (not an NPC)
UnitIsPossessed	Returns whether a unit is possessed by another
UnitIsQuestBoss	This function is not yet documented
UnitIsRaidOfficer	Returns whether a unit is a raid assistant in the player's raid
UnitIsSameServer	Returns whether two units are from the same server
UnitIsSilenced	Returns whether a character is silenced on a voice channel
UnitIsTalking	Returns whether a unit is currently speaking in voice chat
UnitIsTapped	Returns whether a unit is tapped
UnitIsTappedByAllThreatList	Returns whether a unit allows all players on its threat list to receive kill credit
UnitIsTappedByPlayer	Returns whether a unit is tapped by the player or the player's group
UnitIsTrivial	Returns whether a unit is trivial at the player's level
UnitIsUnit	Returns whether two unit references are to the same unit
UnitIsVisible	Returns whether a unit is in the player's area of interest
UnitLevel	Returns a unit's level
UnitMana	This function is deprecated and should no longer be useddeprecated
UnitManaMax	This function is deprecated and should no longer be useddeprecated
UnitName	Returns the name of a unit
UnitOnTaxi	Returns whether a unit is currently riding a flight path (taxi)
UnitPVPName	Returns the name of a unit including the unit's current title
UnitPVPRank	Returns a unit's PVP rank as a numberdeprecated
UnitPlayerControlled	Returns whether a unit is controlled by a player
UnitPlayerOrPetInParty	Returns whether a unit is in the player's party or belongs to a party member
UnitPlayerOrPetInRaid	Returns whether a unit is in the player's raid or belongs to a raid member
UnitPower	Returns a unit's current level of mana, rage, energy or other power type
UnitPowerMax	Returns a unit's maximum mana, rage, energy or other power type
UnitPowerType	Returns the power type (energy, mana, rage) of the given unit
UnitRace	Returns the name of a unit's race
UnitRangedAttack	Returns information about the player's or pet's ranged weapon skill
UnitRangedAttackPower	Returns the player's or pet's ranged attack power
UnitRangedDamage	Returns information about the player's or pet's ranged attack damage and speed
UnitReaction	Returns the reaction of one unit with regards to another as a number
UnitResistance	Returns information about the player's or pet's magic resistance
UnitSelectionColor	Returns a color indicating hostility and related status of a unit
UnitSetRole	Sets a unit's role in the group or raid
UnitSex	Returns the gender of the given unit or player
UnitSpellHaste	Returns the unit's spell haste as a percentage
UnitStat	Returns information about a basic character statistic for the player or pet
UnitSwitchToVehicleSeat	Moves the player to another seat within his current vehicle
UnitTargetsVehicleInRaidUI	Returns whether attempts to target a unit should target its vehicle
UnitThreatPercentageOfLead	This function is not yet documented
UnitThreatSituation	Returns the general threat status of a unit
UnitUsingVehicle	Returns whether a unit is using a vehicle
UnitVehicleSeatCount	Returns the number of seats in a unit's vehicle
UnitVehicleSeatInfo	Returns information about seats in a vehicle
UnitVehicleSkin	Returns the style of vehicle UI to display for a unit
UnitXP	Returns the player's current amount of experience points
UnitXPMax	Return the total amount of experience points required for the player to gain a level
UpdateAddOnCPUUsage	Updates addon CPU profiling information
UpdateAddOnMemoryUsage	Updates addon memory usage information
UpdateGMTicket	Updates the open GM ticket with new textprotected
UpdateInventoryAlertStatus	This is a Blizzard internal functioninternal
UpdateMapHighlight	Returns information about the texture used for highlighting zones in a continent map on mouseover
UpdateWarGamesList	This function is not yet documented
UpdateWorldMapArrowFrames	This is a Blizzard internal functioninternal
UploadSettings	Stores a backup of game settings on the server
UseAction	Uses an actionprotected
UseContainerItem	Activate (as with right-clicking) an item in one of the player's bagsprotected
UseEquipmentSet	Equips the items in an equipment set
UseHearthstone	Attempts to use the player's Hearthstoneprotected
UseInventoryItem	Activate (as with right-clicking) an equipped itemprotected
UseItemByName	Uses an arbitrary item (optionally on a specified unit)protected
UseQuestLogSpecialItem	Uses the item associated with a current questprotected
UseSoulstone	Instantly resurrects the player in place, if possible
ValidateTimer	This function is not yet documented
VehicleAimDecrement	Adjusts vehicle aim downward by a specified amount
VehicleAimDownStart	Starts adjusting vehicle aim downwardprotected
VehicleAimDownStop	Stops adjusting vehicle aim downwardprotected
VehicleAimGetAngle	Returns the aim angle of a vehicle weapon
VehicleAimGetNormAngle	Returns the aim angle of a vehicle weapon relative to its minimum angle
VehicleAimGetNormPower	This is a Blizzard internal functioninternal
VehicleAimIncrement	Adjusts vehicle aim upward by a specified amount
VehicleAimRequestAngle	Attempts to set a vehicle weapon's aim angle to a specific value
VehicleAimRequestNormAngle	Attempts to set a vehicle weapon's aim angle to a specific value relative to its minimum value
VehicleAimSetNormPower	This is a Blizzard internal functioninternal
VehicleAimUpStart	Starts adjusting vehicle aim upwardprotected
VehicleAimUpStop	Stops adjusting vehicle aim upwardprotected
VehicleCameraZoomIn	Zooms the player's view in while in a vehicle
VehicleCameraZoomOut	Zooms the player's view out while in a vehicle
VehicleExit	Removes the player from the current vehicle
VehicleNextSeat	Moves the player from his current seat in a vehicle to the next sequentially numbered seat
VehiclePrevSeat	Moves the player from his current seat in a vehicle to the previous sequentially numbered seat
ViewGuildRecipes	This function is not yet documented
VoiceChat_ActivatePrimaryCaptureCallback	This function is deprecated and should no longer be useddeprecated
VoiceChat_GetCurrentMicrophoneSignalLevel	Returns the current volume level of the microphone signal
VoiceChat_IsPlayingLoopbackSound	Returns whether the Microphone Test recording is playing
VoiceChat_IsRecordingLoopbackSound	Returns whether a Microphone Test is recording
VoiceChat_PlayLoopbackSound	Plays back the Microphone Test recording
VoiceChat_RecordLoopbackSound	Begins recording a Microphone Test
VoiceChat_StartCapture	This function is deprecated and should no longer be useddeprecated
VoiceChat_StopCapture	This function is deprecated and should no longer be useddeprecated
VoiceChat_StopPlayingLoopbackSound	Stops playing the Microphone Test recording
VoiceChat_StopRecordingLoopbackSound	Stops recording a Microphone Test
VoiceEnumerateCaptureDevices	Returns the name of an audio input device for voice chat
VoiceEnumerateOutputDevices	Returns the name of an audio output device for voice chat
VoiceGetCurrentCaptureDevice	Returns the index of the current voice capture device
VoiceGetCurrentOutputDevice	Returns the index of the current voice output device
VoiceIsDisabledByClient	Returns whether the voice chat system cannot be enabled
VoicePushToTalkStart	Used internally to start talking, when push-to-talk is active in voice chat.deprecated
VoicePushToTalkStop	Used internally to stop talking, when push-to-talk is active in voice chatdeprecated
VoiceSelectCaptureDevice	Selects an audio input device for voice chat
VoiceSelectOutputDevice	Selects an audio output device for voice chat
WarGameRespond	This is a Blizzard internal functioninternal
WithdrawGuildBankMoney	Attempts to withdraw money from the guild bankconfirmation
ZoomOut	Sets the world map to show the area containing its current area
abs	Returns the absolute value of a numberluaapi
assert	Causes a Lua error if a condition is failedluaapi
ceil	Returns the smallest integer larger than or equal to a numberluaapi
collectgarbage	Interface to the Lua garbage collectorluaapi
date	Returns a formatted date/time string for a date (or the current date)luaapi
debugbreak	This is a Blizzard internal functioninternal
debugdump	This is a Blizzard internal functioninternal
debughook	This function is not yet documented
debuginfo	This is a Blizzard internal functioninternal
debugload	This is a Blizzard internal functioninternal
debuglocals	Returns information about the local variables at a given stack depth
debugprint	This is a Blizzard internal functioninternal
debugprofilestart	Starts/resets the high resolution profiling timer
debugprofilestop	Returns the value of the profiling timer
debugstack	Returns information about the current function call stack
debugtimestamp	This is a Blizzard internal functioninternal
deg	Converts an angle measurement in radians to degreesluaapi
difftime	Returns the number of seconds between two time valuesluaapi
error	Causes a Lua error messageluaapi
exp	Returns the value of the exponential function for a numberluaapi
floor	Returns the largest integer smaller than or equal to a numberluaapi
forceinsecure	Causes the current execution path to continue outside the secure environment
foreach	This function is deprecated and should no longer be useddeprecatedluaapi
foreachi	This function is deprecated and should no longer be useddeprecatedluaapi
format	Returns a formatted string containing specified valuesluaapi
frexp	Returns the normalized fraction and base-2 exponent for a numberluaapi
gcinfo	Returns the total Lua memory usagedeprecatedluaapi
geterrorhandler	Returns the current error handler function
getfenv	Returns the environment for a function (or the global environment)luaapi
getmetatable	Returns an object's metatableluaapi
getn	This function is deprecated and should no longer be useddeprecatedluaapi
gmatch	Returns an iterator function for finding pattern matches in a stringluaapi
gsub	Returns a string in which occurrences of a pattern are replacedluaapi
hooksecurefunc	Add a function to be called after execution of a secure function
ipairs	Returns an iterator function for integer keys in a tableluaapi
issecure	Returns whether the current execution path is secure
issecurevariable	Returns whether a variable is secure (and if not, which addon tainted it)
ldexp	Returns the number generated by a normalized fraction and base-2 exponentluaapi
loadstring	Loads and compiles Lua source codeluaapi
log	Returns the natural logarithm of a numberluaapi
log10	Returns the base-10 logarithm of a numberluaapi
max	Returns the greatest of a list of numbersluaapi
min	Returns the least of a list of numbersluaapi
mod	Returns the remainder from division of two numbersluaapi
newproxy	Creates a zero-length userdata with an optional metatable.luaapi
next	Returns the next key/value pair in a tableluaapi
pairs	Returns an iterator function for a tableluaapi
pcall	Executes a function in protected modeluaapi
rad	Converts an angle specified in degrees to radiansluaapi
random	Generates a pseudo-random numberluaapi
rawequal	Returns whether two values are equal without invoking any metamethodsluaapi
rawget	Returns the real value associated with a key in a table without invoking any metamethodsluaapi
rawset	Sets the value associated with a key in a table without invoking any metamethodsluaapi
scrub	Replaces non-simple values in a list with nil
securecall	Calls a function without tainting the execution path
select	Returns one or more values from a list (`...`), or the number of values in a listluaapi
seterrorhandler	Changes the error handler to a specified function
setfenv	Sets the environment to be used by a functionluaapi
setmetatable	Sets the metatable for a tableluaapi
sort	Sorts a tableluaapi
sqrt	Returns the square root of a numberluaapi
strbyte	Returns the numeric code for one or more characters in a stringluaapi
strchar	Returns the character(s) for one or more numeric codesluaapi
strconcat	Joins a list of strings (with no separator)
strfind	Returns information about matches for a pattern in a stringluaapi
strjoin	Joins a list of strings together with a given separator
strlen	Returns the number of characters in a stringluaapi
strlenutf8	Returns the length of a string, taking UTF-8 multi-byte characters into account
strlower	Returns a copy of a string with all uppercase letters converted to lowercaseluaapi
strmatch	Returns the matches for a for a pattern in a stringluaapi
strrep	Returns a string produced by a number of repetitions of another stringluaapi
strrev	Returns the reverse of a stringluaapi
strsplit	Splits a string based on another seperator string
strsub	Returns a substring of a stringluaapi
strtrim	Trims leading and trailing characters (whitespace by default) from a string
strupper	Returns a copy of a string with all lowercase letters converted to uppercaseluaapi
time	Returns the numeric time value for a described date/time (or the current time)luaapi
tinsert	Inserts a value into a tableluaapi
tonumber	Returns the numeric value of a stringluaapi
tostring	Returns a string representation of a valueluaapi
tremove	Removes an element from a tableluaapi
type	Returns a string describing the data type of a valueluaapi
unpack	Returns the list of elements in a tableluaapi
wipe	Removes all entries from a table
xpcall	Executes a function in protected mode with a custom error handlerluaapi
